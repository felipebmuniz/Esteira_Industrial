

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Nov 29 19:36:17 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	text22,local,class=CODE,merge=1,delta=2
    33                           	psect	text23,local,class=CODE,merge=1,delta=2
    34                           	psect	text24,local,class=CODE,merge=1,delta=2
    35                           	psect	text25,local,class=CODE,merge=1,delta=2
    36                           	psect	text26,local,class=CODE,merge=1,delta=2
    37                           	psect	text27,local,class=CODE,merge=1,delta=2
    38                           	psect	text28,local,class=CODE,merge=1,delta=2
    39                           	psect	text29,local,class=CODE,merge=1,delta=2
    40                           	psect	text30,local,class=CODE,merge=1,delta=2
    41                           	psect	text31,local,class=CODE,merge=1,delta=2
    42                           	psect	text32,local,class=CODE,merge=1,delta=2
    43                           	psect	text33,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.20
    49                           ; Generated 12/02/2020 GMT
    50                           ; 
    51                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F877A Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0014                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  0081                     	;# 
   118  0085                     	;# 
   119  0086                     	;# 
   120  0087                     	;# 
   121  0088                     	;# 
   122  0089                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  008E                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  010E                     	;# 
   139  010F                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  0000                     	;# 
   203  0001                     	;# 
   204  0002                     	;# 
   205  0003                     	;# 
   206  0004                     	;# 
   207  0005                     	;# 
   208  0006                     	;# 
   209  0007                     	;# 
   210  0008                     	;# 
   211  0009                     	;# 
   212  000A                     	;# 
   213  000B                     	;# 
   214  000C                     	;# 
   215  000D                     	;# 
   216  000E                     	;# 
   217  000E                     	;# 
   218  000F                     	;# 
   219  0010                     	;# 
   220  0011                     	;# 
   221  0012                     	;# 
   222  0013                     	;# 
   223  0014                     	;# 
   224  0015                     	;# 
   225  0015                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001B                     	;# 
   232  001B                     	;# 
   233  001C                     	;# 
   234  001D                     	;# 
   235  001E                     	;# 
   236  001F                     	;# 
   237  0081                     	;# 
   238  0085                     	;# 
   239  0086                     	;# 
   240  0087                     	;# 
   241  0088                     	;# 
   242  0089                     	;# 
   243  008C                     	;# 
   244  008D                     	;# 
   245  008E                     	;# 
   246  0091                     	;# 
   247  0092                     	;# 
   248  0093                     	;# 
   249  0094                     	;# 
   250  0098                     	;# 
   251  0099                     	;# 
   252  009C                     	;# 
   253  009D                     	;# 
   254  009E                     	;# 
   255  009F                     	;# 
   256  010C                     	;# 
   257  010D                     	;# 
   258  010E                     	;# 
   259  010F                     	;# 
   260  018C                     	;# 
   261  018D                     	;# 
   262  0008                     _PORTDbits	set	8
   263  0007                     _PORTCbits	set	7
   264  0006                     _PORTBbits	set	6
   265  000B                     _INTCONbits	set	11
   266  0001                     _TMR0	set	1
   267  000B                     _INTCON	set	11
   268  0009                     _PORTE	set	9
   269  0008                     _PORTD	set	8
   270  0007                     _PORTC	set	7
   271  0006                     _PORTB	set	6
   272  0005                     _PORTA	set	5
   273  009C                     _CMCON	set	156
   274  0081                     _OPTION_REG	set	129
   275  0089                     _TRISE	set	137
   276  0088                     _TRISD	set	136
   277  0087                     _TRISC	set	135
   278  0086                     _TRISB	set	134
   279  0085                     _TRISA	set	133
   280                           
   281                           	psect	strings
   282  0200                     __pstrings:
   283  0200                     stringtab:
   284  0200                     __stringtab:
   285                           
   286                           ;	String table - string pointers are 1 byte each
   287  0200  1BFF               	btfsc	btemp+1,7
   288  0201  2A0A               	ljmp	stringcode
   289  0202  1383               	bcf	3,7
   290  0203  187F               	btfsc	btemp+1,0
   291  0204  1783               	bsf	3,7
   292  0205  0800               	movf	0,w
   293  0206  0A84               	incf	4,f
   294  0207  1903               	skipnz
   295  0208  0AFF               	incf	btemp+1,f
   296  0209  0008               	return
   297  020A                     stringcode:
   298  020A                     stringdir:
   299  020A  3002               	movlw	high stringdir
   300  020B  008A               	movwf	10
   301  020C  0804               	movf	4,w
   302  020D  0A84               	incf	4,f
   303  020E  0782               	addwf	2,f
   304  020F                     __stringbase:
   305  020F  3400               	retlw	0
   306  0210                     __end_of__stringtab:
   307  0210                     STR_1:
   308  0210  3450               	retlw	80	;'P'
   309  0211  3441               	retlw	65	;'A'
   310  0212  3443               	retlw	67	;'C'
   311  0213  3420               	retlw	32	;' '
   312  0214  3445               	retlw	69	;'E'
   313  0215  344D               	retlw	77	;'M'
   314  0216  3420               	retlw	32	;' '
   315  0217  3441               	retlw	65	;'A'
   316  0218  3420               	retlw	32	;' '
   317  0219  3420               	retlw	32	;' '
   318  021A  3420               	retlw	32	;' '
   319  021B  3420               	retlw	32	;' '
   320  021C  3420               	retlw	32	;' '
   321  021D  3420               	retlw	32	;' '
   322  021E  3420               	retlw	32	;' '
   323  021F  3400               	retlw	0
   324  0220                     STR_2:
   325  0220  3450               	retlw	80	;'P'
   326  0221  3441               	retlw	65	;'A'
   327  0222  3443               	retlw	67	;'C'
   328  0223  3420               	retlw	32	;' '
   329  0224  3445               	retlw	69	;'E'
   330  0225  344D               	retlw	77	;'M'
   331  0226  3420               	retlw	32	;' '
   332  0227  3442               	retlw	66	;'B'
   333  0228  3420               	retlw	32	;' '
   334  0229  3420               	retlw	32	;' '
   335  022A  3420               	retlw	32	;' '
   336  022B  3420               	retlw	32	;' '
   337  022C  3420               	retlw	32	;' '
   338  022D  3420               	retlw	32	;' '
   339  022E  3420               	retlw	32	;' '
   340  022F  3400               	retlw	0
   341  0230                     STR_8:
   342  0230  344E               	retlw	78	;'N'
   343  0231  3445               	retlw	69	;'E'
   344  0232  344E               	retlw	78	;'N'
   345  0233  3448               	retlw	72	;'H'
   346  0234  3455               	retlw	85	;'U'
   347  0235  344D               	retlw	77	;'M'
   348  0236  3420               	retlw	32	;' '
   349  0237  3450               	retlw	80	;'P'
   350  0238  3441               	retlw	65	;'A'
   351  0239  3443               	retlw	67	;'C'
   352  023A  3420               	retlw	32	;' '
   353  023B  3420               	retlw	32	;' '
   354  023C  3420               	retlw	32	;' '
   355  023D  3420               	retlw	32	;' '
   356  023E  3420               	retlw	32	;' '
   357  023F  3400               	retlw	0
   358  0240                     STR_5:
   359  0240  3452               	retlw	82	;'R'
   360  0241  3445               	retlw	69	;'E'
   361  0242  344D               	retlw	77	;'M'
   362  0243  344F               	retlw	79	;'O'
   363  0244  3456               	retlw	86	;'V'
   364  0245  3445               	retlw	69	;'E'
   365  0246  3452               	retlw	82	;'R'
   366  0247  3420               	retlw	32	;' '
   367  0248  3450               	retlw	80	;'P'
   368  0249  3441               	retlw	65	;'A'
   369  024A  3443               	retlw	67	;'C'
   370  024B  3420               	retlw	32	;' '
   371  024C  3420               	retlw	32	;' '
   372  024D  3420               	retlw	32	;' '
   373  024E  3420               	retlw	32	;' '
   374  024F  3400               	retlw	0
   375  0250                     STR_4:
   376  0250  3452               	retlw	82	;'R'
   377  0251  3445               	retlw	69	;'E'
   378  0252  344D               	retlw	77	;'M'
   379  0253  344F               	retlw	79	;'O'
   380  0254  3456               	retlw	86	;'V'
   381  0255  3445               	retlw	69	;'E'
   382  0256  3452               	retlw	82	;'R'
   383  0257  3420               	retlw	32	;' '
   384  0258  3431               	retlw	49	;'1'
   385  0259  3420               	retlw	32	;' '
   386  025A  3450               	retlw	80	;'P'
   387  025B  3441               	retlw	65	;'A'
   388  025C  3443               	retlw	67	;'C'
   389  025D  3420               	retlw	32	;' '
   390  025E  3420               	retlw	32	;' '
   391  025F  3400               	retlw	0
   392  0260                     STR_9:
   393  0260  3454               	retlw	84	;'T'
   394  0261  3445               	retlw	69	;'E'
   395  0262  3452               	retlw	82	;'R'
   396  0263  344D               	retlw	77	;'M'
   397  0264  3449               	retlw	73	;'I'
   398  0265  344E               	retlw	78	;'N'
   399  0266  3445               	retlw	69	;'E'
   400  0267  3420               	retlw	32	;' '
   401  0268  3445               	retlw	69	;'E'
   402  0269  344E               	retlw	78	;'N'
   403  026A  3456               	retlw	86	;'V'
   404  026B  3449               	retlw	73	;'I'
   405  026C  344F               	retlw	79	;'O'
   406  026D  3420               	retlw	32	;' '
   407  026E  3420               	retlw	32	;' '
   408  026F  3400               	retlw	0
   409  0270                     STR_7:
   410  0270  344C               	retlw	76	;'L'
   411  0271  3449               	retlw	73	;'I'
   412  0272  3447               	retlw	71	;'G'
   413  0273  3455               	retlw	85	;'U'
   414  0274  3445               	retlw	69	;'E'
   415  0275  3420               	retlw	32	;' '
   416  0276  344F               	retlw	79	;'O'
   417  0277  3420               	retlw	32	;' '
   418  0278  344D               	retlw	77	;'M'
   419  0279  344F               	retlw	79	;'O'
   420  027A  3454               	retlw	84	;'T'
   421  027B  344F               	retlw	79	;'O'
   422  027C  3452               	retlw	82	;'R'
   423  027D  3420               	retlw	32	;' '
   424  027E  3420               	retlw	32	;' '
   425  027F  3400               	retlw	0
   426  0280                     STR_3:
   427  0280  3450               	retlw	80	;'P'
   428  0281  3441               	retlw	65	;'A'
   429  0282  3443               	retlw	67	;'C'
   430  0283  3420               	retlw	32	;' '
   431  0284  3450               	retlw	80	;'P'
   432  0285  3441               	retlw	65	;'A'
   433  0286  3453               	retlw	83	;'S'
   434  0287  3453               	retlw	83	;'S'
   435  0288  344F               	retlw	79	;'O'
   436  0289  3455               	retlw	85	;'U'
   437  028A  3420               	retlw	32	;' '
   438  028B  3445               	retlw	69	;'E'
   439  028C  344D               	retlw	77	;'M'
   440  028D  3420               	retlw	32	;' '
   441  028E  3443               	retlw	67	;'C'
   442  028F  3400               	retlw	0
   443  0290                     STR_6:
   444  0290  3445               	retlw	69	;'E'
   445  0291  3453               	retlw	83	;'S'
   446  0292  3450               	retlw	80	;'P'
   447  0293  3445               	retlw	69	;'E'
   448  0294  3452               	retlw	82	;'R'
   449  0295  3441               	retlw	65	;'A'
   450  0296  344E               	retlw	78	;'N'
   451  0297  3444               	retlw	68	;'D'
   452  0298  344F               	retlw	79	;'O'
   453  0299  3420               	retlw	32	;' '
   454  029A  3450               	retlw	80	;'P'
   455  029B  3441               	retlw	65	;'A'
   456  029C  3443               	retlw	67	;'C'
   457  029D  3420               	retlw	32	;' '
   458  029E  3400               	retlw	0
   459  029F                     STR_10:
   460  029F  3451               	retlw	81	;'Q'
   461  02A0  344E               	retlw	78	;'N'
   462  02A1  3454               	retlw	84	;'T'
   463  02A2  3420               	retlw	32	;' '
   464  02A3  3450               	retlw	80	;'P'
   465  02A4  3441               	retlw	65	;'A'
   466  02A5  3443               	retlw	67	;'C'
   467  02A6  343A               	retlw	58	;':'
   468  02A7  3420               	retlw	32	;' '
   469  02A8  3430               	retlw	48	;'0'
   470  02A9  3400               	retlw	0
   471                           
   472                           	psect	cinit
   473  000F                     start_initialization:	
   474                           ; #config settings
   475                           
   476  000F                     __initialization:
   477                           
   478                           ; Clear objects allocated to COMMON
   479  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   480  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   481  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   482                           
   483                           ; Clear objects allocated to BANK0
   484  0012  1283               	bcf	3,5	;RP0=0, select bank0
   485  0013  1303               	bcf	3,6	;RP1=0, select bank0
   486  0014  01B7               	clrf	__pbssBANK0& (0+127)
   487  0015  01B8               	clrf	(__pbssBANK0+1)& (0+127)
   488  0016  01B9               	clrf	(__pbssBANK0+2)& (0+127)
   489  0017  01BA               	clrf	(__pbssBANK0+3)& (0+127)
   490  0018  01BB               	clrf	(__pbssBANK0+4)& (0+127)
   491  0019  01BC               	clrf	(__pbssBANK0+5)& (0+127)
   492  001A  01BD               	clrf	(__pbssBANK0+6)& (0+127)
   493  001B  01BE               	clrf	(__pbssBANK0+7)& (0+127)
   494  001C  01BF               	clrf	(__pbssBANK0+8)& (0+127)
   495  001D  01C0               	clrf	(__pbssBANK0+9)& (0+127)
   496  001E  01C1               	clrf	(__pbssBANK0+10)& (0+127)
   497  001F  01C2               	clrf	(__pbssBANK0+11)& (0+127)
   498  0020                     end_of_initialization:	
   499                           ;End of C runtime variable initialization code
   500                           
   501  0020                     __end_of__initialization:
   502  0020  0183               	clrf	3
   503  0021  120A  118A  28F5   	ljmp	_main	;jump to C main() function
   504                           
   505                           	psect	bssCOMMON
   506  0078                     __pbssCOMMON:
   507  0078                     _rm_pacote:
   508  0078                     	ds	2
   509  007A                     _data:
   510  007A                     	ds	1
   511                           
   512                           	psect	bssBANK0
   513  0037                     __pbssBANK0:
   514  0037                     _ps_c:
   515  0037                     	ds	2
   516  0039                     _pacotes:
   517  0039                     	ds	2
   518  003B                     _count0:
   519  003B                     	ds	2
   520  003D                     _option:
   521  003D                     	ds	1
   522  003E                     _char_value:
   523  003E                     	ds	5
   524                           
   525                           	psect	cstackCOMMON
   526  0070                     __pcstackCOMMON:
   527  0070                     ?_lcd_init:
   528  0070                     ?_lcd_clear:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_init:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_pac_A:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_pac_B:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_pac_C:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_pac_Erro:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_pac_Remova:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?_esperando:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_ligar_motor:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_pac_null:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?_pac_dual:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_qnt:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_myIsr:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ??_myIsr:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_main:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ?_lcd_delay_1us:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_lcd_delay_40us:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_lcd_delay_2ms:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_lcd_delay_40ms:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_lcd_en_pulse:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_lcd_send_nibble:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_lcd_byte_4bits:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_lcd_byte_8bits:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_lcd_cmd:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_lcd_char:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_lcd_init_8bits:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_lcd_init_4bits:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     lcd_byte_8bits@data:	
   610                           ; 1 bytes @ 0x0
   611                           
   612                           
   613                           ; 1 bytes @ 0x0
   614  0070                     	ds	3
   615  0073                     ??_init:
   616  0073                     ??_lcd_delay_1us:	
   617                           ; 1 bytes @ 0x3
   618                           
   619  0073                     ??_lcd_delay_40us:	
   620                           ; 1 bytes @ 0x3
   621                           
   622  0073                     ??_lcd_delay_2ms:	
   623                           ; 1 bytes @ 0x3
   624                           
   625  0073                     ??_lcd_delay_40ms:	
   626                           ; 1 bytes @ 0x3
   627                           
   628  0073                     ??_lcd_en_pulse:	
   629                           ; 1 bytes @ 0x3
   630                           
   631  0073                     ??_lcd_send_nibble:	
   632                           ; 1 bytes @ 0x3
   633                           
   634  0073                     ??_lcd_byte_8bits:	
   635                           ; 1 bytes @ 0x3
   636                           
   637  0073                     ?___lwdiv:	
   638                           ; 1 bytes @ 0x3
   639                           
   640  0073                     ?___lwmod:	
   641                           ; 2 bytes @ 0x3
   642                           
   643  0073                     lcd_send_nibble@data:	
   644                           ; 2 bytes @ 0x3
   645                           
   646  0073                     ___lwdiv@divisor:	
   647                           ; 1 bytes @ 0x3
   648                           
   649  0073                     ___lwmod@divisor:	
   650                           ; 2 bytes @ 0x3
   651                           
   652                           
   653                           ; 2 bytes @ 0x3
   654  0073                     	ds	1
   655  0074                     ??_lcd_byte_4bits:
   656                           
   657                           ; 1 bytes @ 0x4
   658  0074                     	ds	1
   659  0075                     ___lwdiv@dividend:
   660  0075                     ___lwmod@dividend:	
   661                           ; 2 bytes @ 0x5
   662                           
   663                           
   664                           ; 2 bytes @ 0x5
   665  0075                     	ds	1
   666  0076                     lcd_byte_4bits@data:
   667                           
   668                           ; 1 bytes @ 0x6
   669  0076                     	ds	1
   670  0077                     ??___lwdiv:
   671  0077                     ??___lwmod:	
   672                           ; 1 bytes @ 0x7
   673                           
   674  0077                     lcd_byte_4bits@nibble:	
   675                           ; 1 bytes @ 0x7
   676                           
   677                           
   678                           ; 1 bytes @ 0x7
   679  0077                     	ds	1
   680  0078                     ??_lcd_init:
   681  0078                     ??_lcd_clear:	
   682                           ; 1 bytes @ 0x8
   683                           
   684  0078                     ??_lcd_cmd:	
   685                           ; 1 bytes @ 0x8
   686                           
   687  0078                     ??_lcd_char:	
   688                           ; 1 bytes @ 0x8
   689                           
   690  0078                     ??_lcd_init_8bits:	
   691                           ; 1 bytes @ 0x8
   692                           
   693  0078                     ??_lcd_init_4bits:	
   694                           ; 1 bytes @ 0x8
   695                           
   696                           
   697                           	psect	cstackBANK0
   698  0020                     __pcstackBANK0:	
   699                           ; 1 bytes @ 0x8
   700                           
   701  0020                     lcd_cmd@data:
   702  0020                     lcd_char@data:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0020                     ___lwdiv@counter:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0020                     ___lwmod@counter:	
   709                           ; 1 bytes @ 0x0
   710                           
   711                           
   712                           ; 1 bytes @ 0x0
   713  0020                     	ds	1
   714  0021                     ?_lcd_goto:
   715  0021                     ?_lcd_puts:	
   716                           ; 1 bytes @ 0x1
   717                           
   718  0021                     lcd_goto@col:	
   719                           ; 1 bytes @ 0x1
   720                           
   721  0021                     lcd_puts@vector:	
   722                           ; 1 bytes @ 0x1
   723                           
   724  0021                     ___lwdiv@quotient:	
   725                           ; 2 bytes @ 0x1
   726                           
   727                           
   728                           ; 2 bytes @ 0x1
   729  0021                     	ds	1
   730  0022                     ??_lcd_goto:
   731                           
   732                           ; 1 bytes @ 0x2
   733  0022                     	ds	1
   734  0023                     ?_utoa:
   735  0023                     lcd_puts@LENGHT:	
   736                           ; 1 bytes @ 0x3
   737                           
   738  0023                     utoa@val:	
   739                           ; 1 bytes @ 0x3
   740                           
   741                           
   742                           ; 2 bytes @ 0x3
   743  0023                     	ds	1
   744  0024                     ??_lcd_puts:
   745  0024                     lcd_goto@lin:	
   746                           ; 1 bytes @ 0x4
   747                           
   748                           
   749                           ; 1 bytes @ 0x4
   750  0024                     	ds	1
   751  0025                     utoa@base:
   752                           
   753                           ; 2 bytes @ 0x5
   754  0025                     	ds	2
   755  0027                     ??_utoa:
   756                           
   757                           ; 1 bytes @ 0x7
   758  0027                     	ds	1
   759  0028                     lcd_puts@x:
   760  0028                     utoa@v:	
   761                           ; 1 bytes @ 0x8
   762                           
   763                           
   764                           ; 2 bytes @ 0x8
   765  0028                     	ds	1
   766  0029                     lcd_puts@cnt:
   767                           
   768                           ; 1 bytes @ 0x9
   769  0029                     	ds	1
   770  002A                     ??_pac_A:
   771  002A                     ??_pac_B:	
   772                           ; 1 bytes @ 0xA
   773                           
   774  002A                     ??_pac_C:	
   775                           ; 1 bytes @ 0xA
   776                           
   777  002A                     ??_pac_Erro:	
   778                           ; 1 bytes @ 0xA
   779                           
   780  002A                     ??_pac_Remova:	
   781                           ; 1 bytes @ 0xA
   782                           
   783  002A                     ??_esperando:	
   784                           ; 1 bytes @ 0xA
   785                           
   786  002A                     ??_ligar_motor:	
   787                           ; 1 bytes @ 0xA
   788                           
   789  002A                     ??_pac_null:	
   790                           ; 1 bytes @ 0xA
   791                           
   792  002A                     ??_pac_dual:	
   793                           ; 1 bytes @ 0xA
   794                           
   795  002A                     ??_qnt:	
   796                           ; 1 bytes @ 0xA
   797                           
   798  002A                     utoa@c:	
   799                           ; 1 bytes @ 0xA
   800                           
   801                           
   802                           ; 1 bytes @ 0xA
   803  002A                     	ds	1
   804  002B                     utoa@buf:
   805                           
   806                           ; 1 bytes @ 0xB
   807  002B                     	ds	1
   808  002C                     ?_itoa:
   809  002C                     itoa@val:	
   810                           ; 1 bytes @ 0xC
   811                           
   812                           
   813                           ; 2 bytes @ 0xC
   814  002C                     	ds	2
   815  002E                     itoa@base:
   816                           
   817                           ; 2 bytes @ 0xE
   818  002E                     	ds	2
   819  0030                     ??_itoa:
   820                           
   821                           ; 1 bytes @ 0x10
   822  0030                     	ds	1
   823  0031                     itoa@buf:
   824                           
   825                           ; 1 bytes @ 0x11
   826  0031                     	ds	1
   827  0032                     ?_set_valor:
   828  0032                     set_valor@valor:	
   829                           ; 1 bytes @ 0x12
   830                           
   831                           
   832                           ; 2 bytes @ 0x12
   833  0032                     	ds	2
   834  0034                     ??_set_valor:
   835                           
   836                           ; 1 bytes @ 0x14
   837  0034                     	ds	1
   838  0035                     ??_main:
   839                           
   840                           ; 1 bytes @ 0x15
   841  0035                     	ds	2
   842                           
   843                           	psect	maintext
   844  00F5                     __pmaintext:	
   845 ;;
   846 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   847 ;;
   848 ;; *************** function _main *****************
   849 ;; Defined at:
   850 ;;		line 201 in file "main.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;		None
   853 ;; Auto vars:     Size  Location     Type
   854 ;;		None
   855 ;; Return value:  Size  Location     Type
   856 ;;                  1    wreg      void 
   857 ;; Registers used:
   858 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   859 ;; Tracked objects:
   860 ;;		On entry : B00/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   864 ;;      Params:         0       0       0       0       0
   865 ;;      Locals:         0       0       0       0       0
   866 ;;      Temps:          0       2       0       0       0
   867 ;;      Totals:         0       2       0       0       0
   868 ;;Total ram usage:        2 bytes
   869 ;; Hardware stack levels required when called: 9
   870 ;; This function calls:
   871 ;;		___lwmod
   872 ;;		_esperando
   873 ;;		_init
   874 ;;		_lcd_init
   875 ;;		_ligar_motor
   876 ;;		_pac_A
   877 ;;		_pac_B
   878 ;;		_pac_C
   879 ;;		_pac_Erro
   880 ;;		_pac_Remova
   881 ;;		_pac_dual
   882 ;;		_pac_null
   883 ;;		_qnt
   884 ;;		_set_valor
   885 ;; This function is called by:
   886 ;;		Startup code after reset
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           
   891                           ;psect for function _main
   892  00F5                     _main:
   893  00F5                     l1977:	
   894                           ;incstack = 0
   895 ;; hardware stack exceeded
   896                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   897                           
   898                           
   899                           ;main.c: 202:     INTCONbits.GIE = 0;
   900  00F5  138B               	bcf	11,7	;volatile
   901  00F6                     l1979:
   902                           
   903                           ;main.c: 204:     init();
   904  00F6  120A  118A  261A  120A  118A  	fcall	_init
   905  00FB                     l1981:
   906                           
   907                           ;main.c: 206:     INTCONbits.GIE = 1;
   908  00FB  178B               	bsf	11,7	;volatile
   909                           
   910                           ;main.c: 209:     lcd_init();
   911  00FC  120A  118A  26C0  120A  118A  	fcall	_lcd_init
   912  0101                     l1983:
   913                           
   914                           ;main.c: 212:     esperando();
   915  0101  120A  118A  25FC  120A  118A  	fcall	_esperando
   916  0106                     l1985:
   917                           
   918                           ;main.c: 213:     qnt();
   919  0106  120A  118A  2637  120A  118A  	fcall	_qnt
   920  010B  292A               	goto	l1999
   921  010C                     l1987:
   922                           
   923                           ;main.c: 219:                 pac_A();
   924  010C  120A  118A  25C0  120A  118A  	fcall	_pac_A
   925                           
   926                           ;main.c: 220:                 break;
   927  0111  2945               	goto	l2001
   928  0112                     l1989:
   929                           
   930                           ;main.c: 222:                 pac_B();
   931  0112  120A  118A  25A2  120A  118A  	fcall	_pac_B
   932                           
   933                           ;main.c: 223:                 break;
   934  0117  2945               	goto	l2001
   935  0118                     l1991:
   936                           
   937                           ;main.c: 225:                 pac_Erro();
   938  0118  120A  118A  2584  120A  118A  	fcall	_pac_Erro
   939                           
   940                           ;main.c: 226:                 break;
   941  011D  2945               	goto	l2001
   942  011E                     l1993:
   943                           
   944                           ;main.c: 228:                 pac_Remova();
   945  011E  120A  118A  2566  120A  118A  	fcall	_pac_Remova
   946                           
   947                           ;main.c: 229:                 break;
   948  0123  2945               	goto	l2001
   949  0124                     l1995:
   950                           
   951                           ;main.c: 231:                 esperando();
   952  0124  120A  118A  25FC  120A  118A  	fcall	_esperando
   953                           
   954                           ;main.c: 232:                 break;
   955  0129  2945               	goto	l2001
   956  012A                     l1999:
   957  012A  1283               	bcf	3,5	;RP0=0, select bank0
   958  012B  1303               	bcf	3,6	;RP1=0, select bank0
   959  012C  083D               	movf	_option,w
   960  012D  00B5               	movwf	??_main
   961  012E  01B6               	clrf	??_main+1
   962                           
   963                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   964                           ; Switch size 1, requested type "simple"
   965                           ; Number of cases is 1, Range of values is 0 to 0
   966                           ; switch strategies available:
   967                           ; Name         Instructions Cycles
   968                           ; simple_byte            4     3 (average)
   969                           ; direct_byte           11     8 (fixed)
   970                           ; jumptable            260     6 (fixed)
   971                           ;	Chosen strategy is simple_byte
   972  012F  0836               	movf	??_main+1,w
   973  0130  3A00               	xorlw	0	; case 0
   974  0131  1903               	skipnz
   975  0132  2934               	goto	l2095
   976  0133  2945               	goto	l2001
   977  0134                     l2095:
   978                           
   979                           ; Switch size 1, requested type "simple"
   980                           ; Number of cases is 5, Range of values is 65 to 82
   981                           ; switch strategies available:
   982                           ; Name         Instructions Cycles
   983                           ; simple_byte           16     9 (average)
   984                           ; direct_byte           65    11 (fixed)
   985                           ; jumptable            263     9 (fixed)
   986                           ;	Chosen strategy is simple_byte
   987  0134  0835               	movf	??_main,w
   988  0135  3A41               	xorlw	65	; case 65
   989  0136  1903               	skipnz
   990  0137  290C               	goto	l1987
   991  0138  3A03               	xorlw	3	; case 66
   992  0139  1903               	skipnz
   993  013A  2912               	goto	l1989
   994  013B  3A07               	xorlw	7	; case 69
   995  013C  1903               	skipnz
   996  013D  2918               	goto	l1991
   997  013E  3A15               	xorlw	21	; case 80
   998  013F  1903               	skipnz
   999  0140  2924               	goto	l1995
  1000  0141  3A02               	xorlw	2	; case 82
  1001  0142  1903               	skipnz
  1002  0143  291E               	goto	l1993
  1003  0144  2945               	goto	l2001
  1004  0145                     l2001:
  1005                           
  1006                           ;main.c: 237:         if (count0 == 1) {
  1007  0145  1283               	bcf	3,5	;RP0=0, select bank0
  1008  0146  1303               	bcf	3,6	;RP1=0, select bank0
  1009  0147  033B               	decf	_count0,w
  1010  0148  043C               	iorwf	_count0+1,w
  1011  0149  1D03               	btfss	3,2
  1012  014A  294C               	goto	u1491
  1013  014B  294D               	goto	u1490
  1014  014C                     u1491:
  1015  014C  292A               	goto	l1999
  1016  014D                     u1490:
  1017  014D                     l2003:
  1018                           
  1019                           ;main.c: 240:             if (PORTBbits.RB6 == 0) {
  1020  014D  1B06               	btfsc	6,6	;volatile
  1021  014E  2950               	goto	u1501
  1022  014F  2951               	goto	u1500
  1023  0150                     u1501:
  1024  0150  2957               	goto	l130
  1025  0151                     u1500:
  1026  0151                     l2005:
  1027                           
  1028                           ;main.c: 242:                 ligar_motor();
  1029  0151  120A  118A  25DE  120A  118A  	fcall	_ligar_motor
  1030                           
  1031                           ;main.c: 245:             } else if (PORTBbits.RB4 == 1 || PORTBbits.RB5 == 1) {
  1032  0156  29A9               	goto	l2025
  1033  0157                     l130:
  1034  0157  1A06               	btfsc	6,4	;volatile
  1035  0158  295A               	goto	u1511
  1036  0159  295B               	goto	u1510
  1037  015A                     u1511:
  1038  015A  295F               	goto	l2009
  1039  015B                     u1510:
  1040  015B                     l2007:
  1041  015B  1E86               	btfss	6,5	;volatile
  1042  015C  295E               	goto	u1521
  1043  015D  295F               	goto	u1520
  1044  015E                     u1521:
  1045  015E  29A3               	goto	l2023
  1046  015F                     u1520:
  1047  015F                     l2009:
  1048                           
  1049                           ;main.c: 248:                 if (ps_c == 0) {
  1050  015F  0837               	movf	_ps_c,w
  1051  0160  0438               	iorwf	_ps_c+1,w
  1052  0161  1D03               	btfss	3,2
  1053  0162  2964               	goto	u1531
  1054  0163  2965               	goto	u1530
  1055  0164                     u1531:
  1056  0164  299D               	goto	l2021
  1057  0165                     u1530:
  1058  0165                     l2011:
  1059                           
  1060                           ;main.c: 249:                     ps_c++;
  1061  0165  3001               	movlw	1
  1062  0166  07B7               	addwf	_ps_c,f
  1063  0167  1803               	skipnc
  1064  0168  0AB8               	incf	_ps_c+1,f
  1065  0169  3000               	movlw	0
  1066  016A  07B8               	addwf	_ps_c+1,f
  1067                           
  1068                           ;main.c: 250:                     pacotes++;
  1069  016B  3001               	movlw	1
  1070  016C  07B9               	addwf	_pacotes,f
  1071  016D  1803               	skipnc
  1072  016E  0ABA               	incf	_pacotes+1,f
  1073  016F  3000               	movlw	0
  1074  0170  07BA               	addwf	_pacotes+1,f
  1075  0171                     l2013:
  1076                           
  1077                           ;main.c: 251:                     pac_C();
  1078  0171  120A  118A  2651  120A  118A  	fcall	_pac_C
  1079  0176                     l2015:
  1080                           
  1081                           ;main.c: 254:                     if ((pacotes % 5) == 0 && pacotes != 0) {
  1082  0176  3005               	movlw	5
  1083  0177  00F3               	movwf	___lwmod@divisor
  1084  0178  3000               	movlw	0
  1085  0179  00F4               	movwf	___lwmod@divisor+1
  1086  017A  1283               	bcf	3,5	;RP0=0, select bank0
  1087  017B  1303               	bcf	3,6	;RP1=0, select bank0
  1088  017C  083A               	movf	_pacotes+1,w
  1089  017D  00F6               	movwf	___lwmod@dividend+1
  1090  017E  0839               	movf	_pacotes,w
  1091  017F  00F5               	movwf	___lwmod@dividend
  1092  0180  120A  118A  23E9  120A  118A  	fcall	___lwmod
  1093  0185  0873               	movf	?___lwmod,w
  1094  0186  0474               	iorwf	?___lwmod+1,w
  1095  0187  1D03               	btfss	3,2
  1096  0188  298A               	goto	u1541
  1097  0189  298B               	goto	u1540
  1098  018A                     u1541:
  1099  018A  29A9               	goto	l138
  1100  018B                     u1540:
  1101  018B                     l2017:
  1102  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1103  018C  1303               	bcf	3,6	;RP1=0, select bank0
  1104  018D  0839               	movf	_pacotes,w
  1105  018E  043A               	iorwf	_pacotes+1,w
  1106  018F  1903               	btfsc	3,2
  1107  0190  2992               	goto	u1551
  1108  0191  2993               	goto	u1550
  1109  0192                     u1551:
  1110  0192  29A9               	goto	l138
  1111  0193                     u1550:
  1112  0193                     l2019:
  1113                           
  1114                           ;main.c: 255:                         set_valor(pacotes);
  1115  0193  083A               	movf	_pacotes+1,w
  1116  0194  00B3               	movwf	set_valor@valor+1
  1117  0195  0839               	movf	_pacotes,w
  1118  0196  00B2               	movwf	set_valor@valor
  1119  0197  120A  118A  2492  120A  118A  	fcall	_set_valor
  1120  019C  29A9               	goto	l2025
  1121  019D                     l2021:
  1122                           
  1123                           ;main.c: 258:                     pac_dual();
  1124  019D  120A  118A  2548  120A  118A  	fcall	_pac_dual
  1125  01A2  29A9               	goto	l2025
  1126  01A3                     l2023:
  1127                           
  1128                           ;main.c: 261:                 pac_null();
  1129  01A3  120A  118A  252A  120A  118A  	fcall	_pac_null
  1130  01A8  29A9               	goto	l2025
  1131  01A9                     l138:	
  1132                           ;main.c: 262:             }
  1133                           
  1134  01A9                     l2025:
  1135                           
  1136                           ;main.c: 263:             count0 = 0;
  1137  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1138  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1139  01AB  01BB               	clrf	_count0
  1140  01AC  01BC               	clrf	_count0+1
  1141  01AD  292A               	goto	l1999
  1142  01AE  120A  118A  280C   	ljmp	start
  1143  01B1                     __end_of_main:
  1144                           
  1145                           	psect	text1
  1146  0492                     __ptext1:	
  1147 ;; *************** function _set_valor *****************
  1148 ;; Defined at:
  1149 ;;		line 112 in file "main.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;  valor           2   18[BANK0 ] unsigned int 
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;		None
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1163 ;;      Params:         0       2       0       0       0
  1164 ;;      Locals:         0       0       0       0       0
  1165 ;;      Temps:          0       1       0       0       0
  1166 ;;      Totals:         0       3       0       0       0
  1167 ;;Total ram usage:        3 bytes
  1168 ;; Hardware stack levels used: 1
  1169 ;; Hardware stack levels required when called: 7
  1170 ;; This function calls:
  1171 ;;		_itoa
  1172 ;;		_lcd_goto
  1173 ;;		_lcd_puts
  1174 ;; This function is called by:
  1175 ;;		_main
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           
  1180                           ;psect for function _set_valor
  1181  0492                     _set_valor:
  1182  0492                     l1967:	
  1183                           ;incstack = 0
  1184                           ; Regs used in _set_valor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1185                           
  1186                           
  1187                           ;main.c: 114:     itoa(char_value, valor, 10);
  1188  0492  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0493  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0494  0833               	movf	set_valor@valor+1,w
  1191  0495  00AD               	movwf	itoa@val+1
  1192  0496  0832               	movf	set_valor@valor,w
  1193  0497  00AC               	movwf	itoa@val
  1194  0498  300A               	movlw	10
  1195  0499  00AE               	movwf	itoa@base
  1196  049A  3000               	movlw	0
  1197  049B  00AF               	movwf	itoa@base+1
  1198  049C  303E               	movlw	(low (_char_value| 0))& (0+255)
  1199  049D  120A  118A  24E5  120A  118A  	fcall	_itoa
  1200                           
  1201                           ;main.c: 117:     lcd_goto(2, 10);
  1202  04A2  300A               	movlw	10
  1203  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  1204  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  1205  04A5  00B4               	movwf	??_set_valor
  1206  04A6  0834               	movf	??_set_valor,w
  1207  04A7  00A1               	movwf	lcd_goto@col
  1208  04A8  3002               	movlw	2
  1209  04A9  120A  118A  2425  120A  118A  	fcall	_lcd_goto
  1210  04AE                     l1969:
  1211                           
  1212                           ;main.c: 118:     lcd_puts(char_value, 3);
  1213  04AE  303E               	movlw	(low (_char_value| 0))& (0+255)
  1214  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  1215  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  1216  04B1  00A1               	movwf	lcd_puts@vector
  1217  04B2  3000               	movlw	0
  1218  04B3  00A2               	movwf	lcd_puts@vector+1
  1219  04B4  3003               	movlw	3
  1220  04B5  00B4               	movwf	??_set_valor
  1221  04B6  0834               	movf	??_set_valor,w
  1222  04B7  00A3               	movwf	lcd_puts@LENGHT
  1223  04B8  120A  118A  2460  120A  118A  	fcall	_lcd_puts
  1224  04BD                     l90:
  1225  04BD  0008               	return
  1226  04BE                     __end_of_set_valor:
  1227                           
  1228                           	psect	text2
  1229  04E5                     __ptext2:	
  1230 ;; *************** function _itoa *****************
  1231 ;; Defined at:
  1232 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;  buf             1    wreg     PTR unsigned char 
  1235 ;;		 -> char_value(5), 
  1236 ;;  val             2   12[BANK0 ] int 
  1237 ;;  base            2   14[BANK0 ] int 
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;  buf             1   17[BANK0 ] PTR unsigned char 
  1240 ;;		 -> char_value(5), 
  1241 ;;  cp              1    0        PTR unsigned char 
  1242 ;;		 -> char_value(5), 
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  1    wreg      PTR unsigned char 
  1245 ;; Registers used:
  1246 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1252 ;;      Params:         0       4       0       0       0
  1253 ;;      Locals:         0       1       0       0       0
  1254 ;;      Temps:          0       1       0       0       0
  1255 ;;      Totals:         0       6       0       0       0
  1256 ;;Total ram usage:        6 bytes
  1257 ;; Hardware stack levels used: 1
  1258 ;; Hardware stack levels required when called: 3
  1259 ;; This function calls:
  1260 ;;		_utoa
  1261 ;; This function is called by:
  1262 ;;		_set_valor
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           
  1267                           ;psect for function _itoa
  1268  04E5                     _itoa:
  1269                           
  1270                           ;incstack = 0
  1271                           ; Regs used in _itoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1272                           ;itoa@buf stored from wreg
  1273  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  1274  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  1275  04E7  00B1               	movwf	itoa@buf
  1276  04E8                     l1893:
  1277  04E8                     l1895:
  1278  04E8  1FAD               	btfss	itoa@val+1,7
  1279  04E9  2CEB               	goto	u1481
  1280  04EA  2CEC               	goto	u1480
  1281  04EB                     u1481:
  1282  04EB  2CFC               	goto	l1903
  1283  04EC                     u1480:
  1284  04EC                     l1897:
  1285  04EC  302D               	movlw	45
  1286  04ED  00B0               	movwf	??_itoa
  1287  04EE  0831               	movf	itoa@buf,w
  1288  04EF  0084               	movwf	4
  1289  04F0  0830               	movf	??_itoa,w
  1290  04F1  1383               	bcf	3,7	;select IRP bank0
  1291  04F2  0080               	movwf	0
  1292  04F3                     l1899:
  1293  04F3  3001               	movlw	1
  1294  04F4  00B0               	movwf	??_itoa
  1295  04F5  0830               	movf	??_itoa,w
  1296  04F6  07B1               	addwf	itoa@buf,f
  1297  04F7                     l1901:
  1298  04F7  09AC               	comf	itoa@val,f
  1299  04F8  09AD               	comf	itoa@val+1,f
  1300  04F9  0AAC               	incf	itoa@val,f
  1301  04FA  1903               	skipnz
  1302  04FB  0AAD               	incf	itoa@val+1,f
  1303  04FC                     l1903:
  1304  04FC  082D               	movf	itoa@val+1,w
  1305  04FD  00A4               	movwf	utoa@val+1
  1306  04FE  082C               	movf	itoa@val,w
  1307  04FF  00A3               	movwf	utoa@val
  1308  0500  082F               	movf	itoa@base+1,w
  1309  0501  00A6               	movwf	utoa@base+1
  1310  0502  082E               	movf	itoa@base,w
  1311  0503  00A5               	movwf	utoa@base
  1312  0504  0831               	movf	itoa@buf,w
  1313  0505  120A  118A  22AA  120A  118A  	fcall	_utoa
  1314  050A                     l775:
  1315  050A  0008               	return
  1316  050B                     __end_of_itoa:
  1317                           
  1318                           	psect	text3
  1319  02AA                     __ptext3:	
  1320 ;; *************** function _utoa *****************
  1321 ;; Defined at:
  1322 ;;		line 17 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\itoa.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;  buf             1    wreg     PTR unsigned char 
  1325 ;;		 -> char_value(5), 
  1326 ;;  val             2    3[BANK0 ] unsigned int 
  1327 ;;  base            2    5[BANK0 ] int 
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;  buf             1   11[BANK0 ] PTR unsigned char 
  1330 ;;		 -> char_value(5), 
  1331 ;;  v               2    8[BANK0 ] unsigned int 
  1332 ;;  c               1   10[BANK0 ] unsigned char 
  1333 ;; Return value:  Size  Location     Type
  1334 ;;                  1    wreg      PTR unsigned char 
  1335 ;; Registers used:
  1336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1337 ;; Tracked objects:
  1338 ;;		On entry : 0/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1342 ;;      Params:         0       4       0       0       0
  1343 ;;      Locals:         0       4       0       0       0
  1344 ;;      Temps:          0       1       0       0       0
  1345 ;;      Totals:         0       9       0       0       0
  1346 ;;Total ram usage:        9 bytes
  1347 ;; Hardware stack levels used: 1
  1348 ;; Hardware stack levels required when called: 2
  1349 ;; This function calls:
  1350 ;;		___lwdiv
  1351 ;;		___lwmod
  1352 ;; This function is called by:
  1353 ;;		_itoa
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           
  1358                           ;psect for function _utoa
  1359  02AA                     _utoa:
  1360                           
  1361                           ;incstack = 0
  1362                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1363                           ;utoa@buf stored from wreg
  1364  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  1365  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  1366  02AC  00AB               	movwf	utoa@buf
  1367  02AD                     l1831:
  1368  02AD  0824               	movf	utoa@val+1,w
  1369  02AE  00A9               	movwf	utoa@v+1
  1370  02AF  0823               	movf	utoa@val,w
  1371  02B0  00A8               	movwf	utoa@v
  1372  02B1                     l1833:
  1373  02B1  0826               	movf	utoa@base+1,w
  1374  02B2  00F4               	movwf	___lwdiv@divisor+1
  1375  02B3  0825               	movf	utoa@base,w
  1376  02B4  00F3               	movwf	___lwdiv@divisor
  1377  02B5  0829               	movf	utoa@v+1,w
  1378  02B6  00F6               	movwf	___lwdiv@dividend+1
  1379  02B7  0828               	movf	utoa@v,w
  1380  02B8  00F5               	movwf	___lwdiv@dividend
  1381  02B9  120A  118A  2365  120A  118A  	fcall	___lwdiv
  1382  02BE  0874               	movf	?___lwdiv+1,w
  1383  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  1384  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  1385  02C1  00A9               	movwf	utoa@v+1
  1386  02C2  0873               	movf	?___lwdiv,w
  1387  02C3  00A8               	movwf	utoa@v
  1388  02C4                     l1835:
  1389  02C4  3001               	movlw	1
  1390  02C5  00A7               	movwf	??_utoa
  1391  02C6  0827               	movf	??_utoa,w
  1392  02C7  07AB               	addwf	utoa@buf,f
  1393  02C8                     l1837:
  1394  02C8  0828               	movf	utoa@v,w
  1395  02C9  0429               	iorwf	utoa@v+1,w
  1396  02CA  1D03               	btfss	3,2
  1397  02CB  2ACD               	goto	u1431
  1398  02CC  2ACE               	goto	u1430
  1399  02CD                     u1431:
  1400  02CD  2AB1               	goto	l1833
  1401  02CE                     u1430:
  1402  02CE                     l1839:
  1403  02CE  082B               	movf	utoa@buf,w
  1404  02CF  0084               	movwf	4
  1405  02D0  1383               	bcf	3,7	;select IRP bank0
  1406  02D1  0180               	clrf	0
  1407  02D2                     l1841:
  1408  02D2  3001               	movlw	1
  1409  02D3  02AB               	subwf	utoa@buf,f
  1410  02D4                     l1843:
  1411  02D4  0826               	movf	utoa@base+1,w
  1412  02D5  00F4               	movwf	___lwmod@divisor+1
  1413  02D6  0825               	movf	utoa@base,w
  1414  02D7  00F3               	movwf	___lwmod@divisor
  1415  02D8  0824               	movf	utoa@val+1,w
  1416  02D9  00F6               	movwf	___lwmod@dividend+1
  1417  02DA  0823               	movf	utoa@val,w
  1418  02DB  00F5               	movwf	___lwmod@dividend
  1419  02DC  120A  118A  23E9  120A  118A  	fcall	___lwmod
  1420  02E1  0873               	movf	?___lwmod,w
  1421  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  1422  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  1423  02E4  00A7               	movwf	??_utoa
  1424  02E5  0827               	movf	??_utoa,w
  1425  02E6  00AA               	movwf	utoa@c
  1426  02E7                     l1845:
  1427  02E7  0826               	movf	utoa@base+1,w
  1428  02E8  00F4               	movwf	___lwdiv@divisor+1
  1429  02E9  0825               	movf	utoa@base,w
  1430  02EA  00F3               	movwf	___lwdiv@divisor
  1431  02EB  0824               	movf	utoa@val+1,w
  1432  02EC  00F6               	movwf	___lwdiv@dividend+1
  1433  02ED  0823               	movf	utoa@val,w
  1434  02EE  00F5               	movwf	___lwdiv@dividend
  1435  02EF  120A  118A  2365  120A  118A  	fcall	___lwdiv
  1436  02F4  0874               	movf	?___lwdiv+1,w
  1437  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  1438  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  1439  02F7  00A4               	movwf	utoa@val+1
  1440  02F8  0873               	movf	?___lwdiv,w
  1441  02F9  00A3               	movwf	utoa@val
  1442  02FA                     l1847:
  1443  02FA  300A               	movlw	10
  1444  02FB  022A               	subwf	utoa@c,w
  1445  02FC  1C03               	skipc
  1446  02FD  2AFF               	goto	u1441
  1447  02FE  2B00               	goto	u1440
  1448  02FF                     u1441:
  1449  02FF  2B04               	goto	l781
  1450  0300                     u1440:
  1451  0300                     l1849:
  1452  0300  3007               	movlw	7
  1453  0301  00A7               	movwf	??_utoa
  1454  0302  0827               	movf	??_utoa,w
  1455  0303  07AA               	addwf	utoa@c,f
  1456  0304                     l781:
  1457  0304  3030               	movlw	48
  1458  0305  00A7               	movwf	??_utoa
  1459  0306  0827               	movf	??_utoa,w
  1460  0307  07AA               	addwf	utoa@c,f
  1461  0308                     l1851:
  1462  0308  082A               	movf	utoa@c,w
  1463  0309  00A7               	movwf	??_utoa
  1464  030A  082B               	movf	utoa@buf,w
  1465  030B  0084               	movwf	4
  1466  030C  0827               	movf	??_utoa,w
  1467  030D  1383               	bcf	3,7	;select IRP bank0
  1468  030E  0080               	movwf	0
  1469  030F                     l1853:
  1470  030F  3001               	movlw	1
  1471  0310  02AB               	subwf	utoa@buf,f
  1472  0311                     l1855:
  1473  0311  0823               	movf	utoa@val,w
  1474  0312  0424               	iorwf	utoa@val+1,w
  1475  0313  1D03               	btfss	3,2
  1476  0314  2B16               	goto	u1451
  1477  0315  2B17               	goto	u1450
  1478  0316                     u1451:
  1479  0316  2AD4               	goto	l1843
  1480  0317                     u1450:
  1481  0317                     l1857:
  1482                           
  1483                           ;	Return value of _utoa is never used
  1484  0317  3001               	movlw	1
  1485  0318  00A7               	movwf	??_utoa
  1486  0319  0827               	movf	??_utoa,w
  1487  031A  07AB               	addwf	utoa@buf,f
  1488  031B                     l783:
  1489  031B  0008               	return
  1490  031C                     __end_of_utoa:
  1491                           
  1492                           	psect	text4
  1493  03E9                     __ptext4:	
  1494 ;; *************** function ___lwmod *****************
  1495 ;; Defined at:
  1496 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  divisor         2    3[COMMON] unsigned int 
  1499 ;;  dividend        2    5[COMMON] unsigned int 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  counter         1    0[BANK0 ] unsigned char 
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  2    3[COMMON] unsigned int 
  1504 ;; Registers used:
  1505 ;;		wreg, status,2, status,0
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1511 ;;      Params:         4       0       0       0       0
  1512 ;;      Locals:         0       1       0       0       0
  1513 ;;      Temps:          1       0       0       0       0
  1514 ;;      Totals:         5       1       0       0       0
  1515 ;;Total ram usage:        6 bytes
  1516 ;; Hardware stack levels used: 1
  1517 ;; Hardware stack levels required when called: 1
  1518 ;; This function calls:
  1519 ;;		Nothing
  1520 ;; This function is called by:
  1521 ;;		_main
  1522 ;;		_utoa
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           
  1527                           ;psect for function ___lwmod
  1528  03E9                     ___lwmod:
  1529  03E9                     l1801:	
  1530                           ;incstack = 0
  1531                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1532                           
  1533  03E9  0873               	movf	___lwmod@divisor,w
  1534  03EA  0474               	iorwf	___lwmod@divisor+1,w
  1535  03EB  1903               	btfsc	3,2
  1536  03EC  2BEE               	goto	u1371
  1537  03ED  2BEF               	goto	u1370
  1538  03EE                     u1371:
  1539  03EE  2C20               	goto	l1819
  1540  03EF                     u1370:
  1541  03EF                     l1803:
  1542  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  1543  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  1544  03F1  01A0               	clrf	___lwmod@counter
  1545  03F2  0AA0               	incf	___lwmod@counter,f
  1546  03F3  2BFF               	goto	l1809
  1547  03F4                     l1805:
  1548  03F4  3001               	movlw	1
  1549  03F5                     u1385:
  1550  03F5  1003               	clrc
  1551  03F6  0DF3               	rlf	___lwmod@divisor,f
  1552  03F7  0DF4               	rlf	___lwmod@divisor+1,f
  1553  03F8  3EFF               	addlw	-1
  1554  03F9  1D03               	skipz
  1555  03FA  2BF5               	goto	u1385
  1556  03FB                     l1807:
  1557  03FB  3001               	movlw	1
  1558  03FC  00F7               	movwf	??___lwmod
  1559  03FD  0877               	movf	??___lwmod,w
  1560  03FE  07A0               	addwf	___lwmod@counter,f
  1561  03FF                     l1809:
  1562  03FF  1FF4               	btfss	___lwmod@divisor+1,7
  1563  0400  2C02               	goto	u1391
  1564  0401  2C03               	goto	u1390
  1565  0402                     u1391:
  1566  0402  2BF4               	goto	l1805
  1567  0403                     u1390:
  1568  0403                     l1811:
  1569  0403  0874               	movf	___lwmod@divisor+1,w
  1570  0404  0276               	subwf	___lwmod@dividend+1,w
  1571  0405  1D03               	skipz
  1572  0406  2C09               	goto	u1405
  1573  0407  0873               	movf	___lwmod@divisor,w
  1574  0408  0275               	subwf	___lwmod@dividend,w
  1575  0409                     u1405:
  1576  0409  1C03               	skipc
  1577  040A  2C0C               	goto	u1401
  1578  040B  2C0D               	goto	u1400
  1579  040C                     u1401:
  1580  040C  2C13               	goto	l1815
  1581  040D                     u1400:
  1582  040D                     l1813:
  1583  040D  0873               	movf	___lwmod@divisor,w
  1584  040E  02F5               	subwf	___lwmod@dividend,f
  1585  040F  0874               	movf	___lwmod@divisor+1,w
  1586  0410  1C03               	skipc
  1587  0411  03F6               	decf	___lwmod@dividend+1,f
  1588  0412  02F6               	subwf	___lwmod@dividend+1,f
  1589  0413                     l1815:
  1590  0413  3001               	movlw	1
  1591  0414                     u1415:
  1592  0414  1003               	clrc
  1593  0415  0CF4               	rrf	___lwmod@divisor+1,f
  1594  0416  0CF3               	rrf	___lwmod@divisor,f
  1595  0417  3EFF               	addlw	-1
  1596  0418  1D03               	skipz
  1597  0419  2C14               	goto	u1415
  1598  041A                     l1817:
  1599  041A  3001               	movlw	1
  1600  041B  02A0               	subwf	___lwmod@counter,f
  1601  041C  1D03               	btfss	3,2
  1602  041D  2C1F               	goto	u1421
  1603  041E  2C20               	goto	u1420
  1604  041F                     u1421:
  1605  041F  2C03               	goto	l1811
  1606  0420                     u1420:
  1607  0420                     l1819:
  1608  0420  0876               	movf	___lwmod@dividend+1,w
  1609  0421  00F4               	movwf	?___lwmod+1
  1610  0422  0875               	movf	___lwmod@dividend,w
  1611  0423  00F3               	movwf	?___lwmod
  1612  0424                     l603:
  1613  0424  0008               	return
  1614  0425                     __end_of___lwmod:
  1615                           
  1616                           	psect	text5
  1617  0365                     __ptext5:	
  1618 ;; *************** function ___lwdiv *****************
  1619 ;; Defined at:
  1620 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  divisor         2    3[COMMON] unsigned int 
  1623 ;;  dividend        2    5[COMMON] unsigned int 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  quotient        2    1[BANK0 ] unsigned int 
  1626 ;;  counter         1    0[BANK0 ] unsigned char 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  2    3[COMMON] unsigned int 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1636 ;;      Params:         4       0       0       0       0
  1637 ;;      Locals:         0       3       0       0       0
  1638 ;;      Temps:          1       0       0       0       0
  1639 ;;      Totals:         5       3       0       0       0
  1640 ;;Total ram usage:        8 bytes
  1641 ;; Hardware stack levels used: 1
  1642 ;; Hardware stack levels required when called: 1
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_utoa
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           
  1651                           ;psect for function ___lwdiv
  1652  0365                     ___lwdiv:
  1653  0365                     l1775:	
  1654                           ;incstack = 0
  1655                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1656                           
  1657  0365  1283               	bcf	3,5	;RP0=0, select bank0
  1658  0366  1303               	bcf	3,6	;RP1=0, select bank0
  1659  0367  01A1               	clrf	___lwdiv@quotient
  1660  0368  01A2               	clrf	___lwdiv@quotient+1
  1661  0369                     l1777:
  1662  0369  0873               	movf	___lwdiv@divisor,w
  1663  036A  0474               	iorwf	___lwdiv@divisor+1,w
  1664  036B  1903               	btfsc	3,2
  1665  036C  2B6E               	goto	u1301
  1666  036D  2B6F               	goto	u1300
  1667  036E                     u1301:
  1668  036E  2BA6               	goto	l1797
  1669  036F                     u1300:
  1670  036F                     l1779:
  1671  036F  01A0               	clrf	___lwdiv@counter
  1672  0370  0AA0               	incf	___lwdiv@counter,f
  1673  0371  2B7D               	goto	l1785
  1674  0372                     l1781:
  1675  0372  3001               	movlw	1
  1676  0373                     u1315:
  1677  0373  1003               	clrc
  1678  0374  0DF3               	rlf	___lwdiv@divisor,f
  1679  0375  0DF4               	rlf	___lwdiv@divisor+1,f
  1680  0376  3EFF               	addlw	-1
  1681  0377  1D03               	skipz
  1682  0378  2B73               	goto	u1315
  1683  0379                     l1783:
  1684  0379  3001               	movlw	1
  1685  037A  00F7               	movwf	??___lwdiv
  1686  037B  0877               	movf	??___lwdiv,w
  1687  037C  07A0               	addwf	___lwdiv@counter,f
  1688  037D                     l1785:
  1689  037D  1FF4               	btfss	___lwdiv@divisor+1,7
  1690  037E  2B80               	goto	u1321
  1691  037F  2B81               	goto	u1320
  1692  0380                     u1321:
  1693  0380  2B72               	goto	l1781
  1694  0381                     u1320:
  1695  0381                     l1787:
  1696  0381  3001               	movlw	1
  1697  0382                     u1335:
  1698  0382  1003               	clrc
  1699  0383  0DA1               	rlf	___lwdiv@quotient,f
  1700  0384  0DA2               	rlf	___lwdiv@quotient+1,f
  1701  0385  3EFF               	addlw	-1
  1702  0386  1D03               	skipz
  1703  0387  2B82               	goto	u1335
  1704  0388  0874               	movf	___lwdiv@divisor+1,w
  1705  0389  0276               	subwf	___lwdiv@dividend+1,w
  1706  038A  1D03               	skipz
  1707  038B  2B8E               	goto	u1345
  1708  038C  0873               	movf	___lwdiv@divisor,w
  1709  038D  0275               	subwf	___lwdiv@dividend,w
  1710  038E                     u1345:
  1711  038E  1C03               	skipc
  1712  038F  2B91               	goto	u1341
  1713  0390  2B92               	goto	u1340
  1714  0391                     u1341:
  1715  0391  2B99               	goto	l1793
  1716  0392                     u1340:
  1717  0392                     l1789:
  1718  0392  0873               	movf	___lwdiv@divisor,w
  1719  0393  02F5               	subwf	___lwdiv@dividend,f
  1720  0394  0874               	movf	___lwdiv@divisor+1,w
  1721  0395  1C03               	skipc
  1722  0396  03F6               	decf	___lwdiv@dividend+1,f
  1723  0397  02F6               	subwf	___lwdiv@dividend+1,f
  1724  0398                     l1791:
  1725  0398  1421               	bsf	___lwdiv@quotient,0
  1726  0399                     l1793:
  1727  0399  3001               	movlw	1
  1728  039A                     u1355:
  1729  039A  1003               	clrc
  1730  039B  0CF4               	rrf	___lwdiv@divisor+1,f
  1731  039C  0CF3               	rrf	___lwdiv@divisor,f
  1732  039D  3EFF               	addlw	-1
  1733  039E  1D03               	skipz
  1734  039F  2B9A               	goto	u1355
  1735  03A0                     l1795:
  1736  03A0  3001               	movlw	1
  1737  03A1  02A0               	subwf	___lwdiv@counter,f
  1738  03A2  1D03               	btfss	3,2
  1739  03A3  2BA5               	goto	u1361
  1740  03A4  2BA6               	goto	u1360
  1741  03A5                     u1361:
  1742  03A5  2B81               	goto	l1787
  1743  03A6                     u1360:
  1744  03A6                     l1797:
  1745  03A6  0822               	movf	___lwdiv@quotient+1,w
  1746  03A7  00F4               	movwf	?___lwdiv+1
  1747  03A8  0821               	movf	___lwdiv@quotient,w
  1748  03A9  00F3               	movwf	?___lwdiv
  1749  03AA                     l593:
  1750  03AA  0008               	return
  1751  03AB                     __end_of___lwdiv:
  1752                           
  1753                           	psect	text6
  1754  0637                     __ptext6:	
  1755 ;; *************** function _qnt *****************
  1756 ;; Defined at:
  1757 ;;		line 107 in file "main.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;		None
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;		None
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      void 
  1764 ;; Registers used:
  1765 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1771 ;;      Params:         0       0       0       0       0
  1772 ;;      Locals:         0       0       0       0       0
  1773 ;;      Temps:          0       1       0       0       0
  1774 ;;      Totals:         0       1       0       0       0
  1775 ;;Total ram usage:        1 bytes
  1776 ;; Hardware stack levels used: 1
  1777 ;; Hardware stack levels required when called: 7
  1778 ;; This function calls:
  1779 ;;		_lcd_goto
  1780 ;;		_lcd_puts
  1781 ;; This function is called by:
  1782 ;;		_main
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           
  1787                           ;psect for function _qnt
  1788  0637                     _qnt:
  1789  0637                     l1963:	
  1790                           ;incstack = 0
  1791                           ; Regs used in _qnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1792                           
  1793                           
  1794                           ;main.c: 108:     lcd_goto(2, 1);
  1795  0637  1283               	bcf	3,5	;RP0=0, select bank0
  1796  0638  1303               	bcf	3,6	;RP1=0, select bank0
  1797  0639  01A1               	clrf	lcd_goto@col
  1798  063A  0AA1               	incf	lcd_goto@col,f
  1799  063B  3002               	movlw	2
  1800  063C  120A  118A  2425  120A  118A  	fcall	_lcd_goto
  1801  0641                     l1965:
  1802                           
  1803                           ;main.c: 109:     lcd_puts("QNT PAC: 0", 10);
  1804  0641  3090               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1805  0642  1283               	bcf	3,5	;RP0=0, select bank0
  1806  0643  1303               	bcf	3,6	;RP1=0, select bank0
  1807  0644  00A1               	movwf	lcd_puts@vector
  1808  0645  3080               	movlw	128
  1809  0646  00A2               	movwf	lcd_puts@vector+1
  1810  0647  300A               	movlw	10
  1811  0648  00AA               	movwf	??_qnt
  1812  0649  082A               	movf	??_qnt,w
  1813  064A  00A3               	movwf	lcd_puts@LENGHT
  1814  064B  120A  118A  2460  120A  118A  	fcall	_lcd_puts
  1815  0650                     l87:
  1816  0650  0008               	return
  1817  0651                     __end_of_qnt:
  1818                           
  1819                           	psect	text7
  1820  052A                     __ptext7:	
  1821 ;; *************** function _pac_null *****************
  1822 ;; Defined at:
  1823 ;;		line 95 in file "main.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;		None
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;		None
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      void 
  1830 ;; Registers used:
  1831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1837 ;;      Params:         0       0       0       0       0
  1838 ;;      Locals:         0       0       0       0       0
  1839 ;;      Temps:          0       1       0       0       0
  1840 ;;      Totals:         0       1       0       0       0
  1841 ;;Total ram usage:        1 bytes
  1842 ;; Hardware stack levels used: 1
  1843 ;; Hardware stack levels required when called: 7
  1844 ;; This function calls:
  1845 ;;		_lcd_goto
  1846 ;;		_lcd_puts
  1847 ;; This function is called by:
  1848 ;;		_main
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           
  1853                           ;psect for function _pac_null
  1854  052A                     _pac_null:
  1855  052A                     l1951:	
  1856                           ;incstack = 0
  1857                           ; Regs used in _pac_null: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1858                           
  1859                           
  1860                           ;main.c: 96:     option = ' ';
  1861  052A  3020               	movlw	32
  1862  052B  1283               	bcf	3,5	;RP0=0, select bank0
  1863  052C  1303               	bcf	3,6	;RP1=0, select bank0
  1864  052D  00AA               	movwf	??_pac_null
  1865  052E  082A               	movf	??_pac_null,w
  1866  052F  00BD               	movwf	_option
  1867  0530                     l1953:
  1868                           
  1869                           ;main.c: 97:     lcd_goto(1, 1);
  1870  0530  01A1               	clrf	lcd_goto@col
  1871  0531  0AA1               	incf	lcd_goto@col,f
  1872  0532  3001               	movlw	1
  1873  0533  120A  118A  2425  120A  118A  	fcall	_lcd_goto
  1874  0538                     l1955:
  1875                           
  1876                           ;main.c: 98:     lcd_puts("NENHUM PAC     ", 15);
  1877  0538  3021               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1878  0539  1283               	bcf	3,5	;RP0=0, select bank0
  1879  053A  1303               	bcf	3,6	;RP1=0, select bank0
  1880  053B  00A1               	movwf	lcd_puts@vector
  1881  053C  3080               	movlw	128
  1882  053D  00A2               	movwf	lcd_puts@vector+1
  1883  053E  300F               	movlw	15
  1884  053F  00AA               	movwf	??_pac_null
  1885  0540  082A               	movf	??_pac_null,w
  1886  0541  00A3               	movwf	lcd_puts@LENGHT
  1887  0542  120A  118A  2460  120A  118A  	fcall	_lcd_puts
  1888  0547                     l81:
  1889  0547  0008               	return
  1890  0548                     __end_of_pac_null:
  1891                           
  1892                           	psect	text8
  1893  0548                     __ptext8:	
  1894 ;; *************** function _pac_dual *****************
  1895 ;; Defined at:
  1896 ;;		line 101 in file "main.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;		None
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;		None
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1910 ;;      Params:         0       0       0       0       0
  1911 ;;      Locals:         0       0       0       0       0
  1912 ;;      Temps:          0       1       0       0       0
  1913 ;;      Totals:         0       1       0       0       0
  1914 ;;Total ram usage:        1 bytes
  1915 ;; Hardware stack levels used: 1
  1916 ;; Hardware stack levels required when called: 7
  1917 ;; This function calls:
  1918 ;;		_lcd_goto
  1919 ;;		_lcd_puts
  1920 ;; This function is called by:
  1921 ;;		_main
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           
  1926                           ;psect for function _pac_dual
  1927  0548                     _pac_dual:
  1928  0548                     l1957:	
  1929                           ;incstack = 0
  1930                           ; Regs used in _pac_dual: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1931                           
  1932                           
  1933                           ;main.c: 102:     option = ' ';
  1934  0548  3020               	movlw	32
  1935  0549  1283               	bcf	3,5	;RP0=0, select bank0
  1936  054A  1303               	bcf	3,6	;RP1=0, select bank0
  1937  054B  00AA               	movwf	??_pac_dual
  1938  054C  082A               	movf	??_pac_dual,w
  1939  054D  00BD               	movwf	_option
  1940  054E                     l1959:
  1941                           
  1942                           ;main.c: 103:     lcd_goto(1, 1);
  1943  054E  01A1               	clrf	lcd_goto@col
  1944  054F  0AA1               	incf	lcd_goto@col,f
  1945  0550  3001               	movlw	1
  1946  0551  120A  118A  2425  120A  118A  	fcall	_lcd_goto
  1947  0556                     l1961:
  1948                           
  1949                           ;main.c: 104:     lcd_puts("TERMINE ENVIO  ", 15);
  1950  0556  3051               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1951  0557  1283               	bcf	3,5	;RP0=0, select bank0
  1952  0558  1303               	bcf	3,6	;RP1=0, select bank0
  1953  0559  00A1               	movwf	lcd_puts@vector
  1954  055A  3080               	movlw	128
  1955  055B  00A2               	movwf	lcd_puts@vector+1
  1956  055C  300F               	movlw	15
  1957  055D  00AA               	movwf	??_pac_dual
  1958  055E  082A               	movf	??_pac_dual,w
  1959  055F  00A3               	movwf	lcd_puts@LENGHT
  1960  0560  120A  118A  2460  120A  118A  	fcall	_lcd_puts
  1961  0565                     l84:
  1962  0565  0008               	return
  1963  0566                     __end_of_pac_dual:
  1964                           
  1965                           	psect	text9
  1966  0566                     __ptext9:	
  1967 ;; *************** function _pac_Remova *****************
  1968 ;; Defined at:
  1969 ;;		line 77 in file "main.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;		None
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;		None
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1983 ;;      Params:         0       0       0       0       0
  1984 ;;      Locals:         0       0       0       0       0
  1985 ;;      Temps:          0       1       0       0       0
  1986 ;;      Totals:         0       1       0       0       0
  1987 ;;Total ram usage:        1 bytes
  1988 ;; Hardware stack levels used: 1
  1989 ;; Hardware stack levels required when called: 7
  1990 ;; This function calls:
  1991 ;;		_lcd_goto
  1992 ;;		_lcd_puts
  1993 ;; This function is called by:
  1994 ;;		_main
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           
  1999                           ;psect for function _pac_Remova
  2000  0566                     _pac_Remova:
  2001  0566                     l1933:	
  2002                           ;incstack = 0
  2003                           ; Regs used in _pac_Remova: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2004                           
  2005                           
  2006                           ;main.c: 78:     option = ' ';
  2007  0566  3020               	movlw	32
  2008  0567  1283               	bcf	3,5	;RP0=0, select bank0
  2009  0568  1303               	bcf	3,6	;RP1=0, select bank0
  2010  0569  00AA               	movwf	??_pac_Remova
  2011  056A  082A               	movf	??_pac_Remova,w
  2012  056B  00BD               	movwf	_option
  2013  056C                     l1935:
  2014                           
  2015                           ;main.c: 79:     lcd_goto(1, 1);
  2016  056C  01A1               	clrf	lcd_goto@col
  2017  056D  0AA1               	incf	lcd_goto@col,f
  2018  056E  3001               	movlw	1
  2019  056F  120A  118A  2425  120A  118A  	fcall	_lcd_goto
  2020  0574                     l1937:
  2021                           
  2022                           ;main.c: 80:     lcd_puts("REMOVER PAC    ", 15);
  2023  0574  3031               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2024  0575  1283               	bcf	3,5	;RP0=0, select bank0
  2025  0576  1303               	bcf	3,6	;RP1=0, select bank0
  2026  0577  00A1               	movwf	lcd_puts@vector
  2027  0578  3080               	movlw	128
  2028  0579  00A2               	movwf	lcd_puts@vector+1
  2029  057A  300F               	movlw	15
  2030  057B  00AA               	movwf	??_pac_Remova
  2031  057C  082A               	movf	??_pac_Remova,w
  2032  057D  00A3               	movwf	lcd_puts@LENGHT
  2033  057E  120A  118A  2460  120A  118A  	fcall	_lcd_puts
  2034  0583                     l72:
  2035  0583  0008               	return
  2036  0584                     __end_of_pac_Remova:
  2037                           
  2038                           	psect	text10
  2039  0584                     __ptext10:	
  2040 ;; *************** function _pac_Erro *****************
  2041 ;; Defined at:
  2042 ;;		line 71 in file "main.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;		None
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;		None
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      void 
  2049 ;; Registers used:
  2050 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2056 ;;      Params:         0       0       0       0       0
  2057 ;;      Locals:         0       0       0       0       0
  2058 ;;      Temps:          0       1       0       0       0
  2059 ;;      Totals:         0       1       0       0       0
  2060 ;;Total ram usage:        1 bytes
  2061 ;; Hardware stack levels used: 1
  2062 ;; Hardware stack levels required when called: 7
  2063 ;; This function calls:
  2064 ;;		_lcd_goto
  2065 ;;		_lcd_puts
  2066 ;; This function is called by:
  2067 ;;		_main
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           
  2072                           ;psect for function _pac_Erro
  2073  0584                     _pac_Erro:
  2074  0584                     l1927:	
  2075                           ;incstack = 0
  2076                           ; Regs used in _pac_Erro: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2077                           
  2078                           
  2079                           ;main.c: 72:     option = ' ';
  2080  0584  3020               	movlw	32
  2081  0585  1283               	bcf	3,5	;RP0=0, select bank0
  2082  0586  1303               	bcf	3,6	;RP1=0, select bank0
  2083  0587  00AA               	movwf	??_pac_Erro
  2084  0588  082A               	movf	??_pac_Erro,w
  2085  0589  00BD               	movwf	_option
  2086  058A                     l1929:
  2087                           
  2088                           ;main.c: 73:     lcd_goto(1, 1);
  2089  058A  01A1               	clrf	lcd_goto@col
  2090  058B  0AA1               	incf	lcd_goto@col,f
  2091  058C  3001               	movlw	1
  2092  058D  120A  118A  2425  120A  118A  	fcall	_lcd_goto
  2093  0592                     l1931:
  2094                           
  2095                           ;main.c: 74:     lcd_puts("REMOVER 1 PAC  ", 15);
  2096  0592  3041               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2097  0593  1283               	bcf	3,5	;RP0=0, select bank0
  2098  0594  1303               	bcf	3,6	;RP1=0, select bank0
  2099  0595  00A1               	movwf	lcd_puts@vector
  2100  0596  3080               	movlw	128
  2101  0597  00A2               	movwf	lcd_puts@vector+1
  2102  0598  300F               	movlw	15
  2103  0599  00AA               	movwf	??_pac_Erro
  2104  059A  082A               	movf	??_pac_Erro,w
  2105  059B  00A3               	movwf	lcd_puts@LENGHT
  2106  059C  120A  118A  2460  120A  118A  	fcall	_lcd_puts
  2107  05A1                     l69:
  2108  05A1  0008               	return
  2109  05A2                     __end_of_pac_Erro:
  2110                           
  2111                           	psect	text11
  2112  0651                     __ptext11:	
  2113 ;; *************** function _pac_C *****************
  2114 ;; Defined at:
  2115 ;;		line 66 in file "main.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;		None
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;		None
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2129 ;;      Params:         0       0       0       0       0
  2130 ;;      Locals:         0       0       0       0       0
  2131 ;;      Temps:          0       1       0       0       0
  2132 ;;      Totals:         0       1       0       0       0
  2133 ;;Total ram usage:        1 bytes
  2134 ;; Hardware stack levels used: 1
  2135 ;; Hardware stack levels required when called: 7
  2136 ;; This function calls:
  2137 ;;		_lcd_goto
  2138 ;;		_lcd_puts
  2139 ;; This function is called by:
  2140 ;;		_main
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           
  2145                           ;psect for function _pac_C
  2146  0651                     _pac_C:
  2147  0651                     l1923:	
  2148                           ;incstack = 0
  2149                           ; Regs used in _pac_C: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2150                           
  2151                           
  2152                           ;main.c: 67:     lcd_goto(1, 1);
  2153  0651  1283               	bcf	3,5	;RP0=0, select bank0
  2154  0652  1303               	bcf	3,6	;RP1=0, select bank0
  2155  0653  01A1               	clrf	lcd_goto@col
  2156  0654  0AA1               	incf	lcd_goto@col,f
  2157  0655  3001               	movlw	1
  2158  0656  120A  118A  2425  120A  118A  	fcall	_lcd_goto
  2159  065B                     l1925:
  2160                           
  2161                           ;main.c: 68:     lcd_puts("PAC PASSOU EM C", 15);
  2162  065B  3071               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2163  065C  1283               	bcf	3,5	;RP0=0, select bank0
  2164  065D  1303               	bcf	3,6	;RP1=0, select bank0
  2165  065E  00A1               	movwf	lcd_puts@vector
  2166  065F  3080               	movlw	128
  2167  0660  00A2               	movwf	lcd_puts@vector+1
  2168  0661  300F               	movlw	15
  2169  0662  00AA               	movwf	??_pac_C
  2170  0663  082A               	movf	??_pac_C,w
  2171  0664  00A3               	movwf	lcd_puts@LENGHT
  2172  0665  120A  118A  2460  120A  118A  	fcall	_lcd_puts
  2173  066A                     l66:
  2174  066A  0008               	return
  2175  066B                     __end_of_pac_C:
  2176                           
  2177                           	psect	text12
  2178  05A2                     __ptext12:	
  2179 ;; *************** function _pac_B *****************
  2180 ;; Defined at:
  2181 ;;		line 60 in file "main.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;		None
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;		None
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1    wreg      void 
  2188 ;; Registers used:
  2189 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2195 ;;      Params:         0       0       0       0       0
  2196 ;;      Locals:         0       0       0       0       0
  2197 ;;      Temps:          0       1       0       0       0
  2198 ;;      Totals:         0       1       0       0       0
  2199 ;;Total ram usage:        1 bytes
  2200 ;; Hardware stack levels used: 1
  2201 ;; Hardware stack levels required when called: 7
  2202 ;; This function calls:
  2203 ;;		_lcd_goto
  2204 ;;		_lcd_puts
  2205 ;; This function is called by:
  2206 ;;		_main
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           
  2211                           ;psect for function _pac_B
  2212  05A2                     _pac_B:
  2213  05A2                     l1917:	
  2214                           ;incstack = 0
  2215                           ; Regs used in _pac_B: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2216                           
  2217                           
  2218                           ;main.c: 61:     option = ' ';
  2219  05A2  3020               	movlw	32
  2220  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  2221  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  2222  05A5  00AA               	movwf	??_pac_B
  2223  05A6  082A               	movf	??_pac_B,w
  2224  05A7  00BD               	movwf	_option
  2225  05A8                     l1919:
  2226                           
  2227                           ;main.c: 62:     lcd_goto(1, 1);
  2228  05A8  01A1               	clrf	lcd_goto@col
  2229  05A9  0AA1               	incf	lcd_goto@col,f
  2230  05AA  3001               	movlw	1
  2231  05AB  120A  118A  2425  120A  118A  	fcall	_lcd_goto
  2232  05B0                     l1921:
  2233                           
  2234                           ;main.c: 63:     lcd_puts("PAC EM B       ", 15);
  2235  05B0  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2236  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2237  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2238  05B3  00A1               	movwf	lcd_puts@vector
  2239  05B4  3080               	movlw	128
  2240  05B5  00A2               	movwf	lcd_puts@vector+1
  2241  05B6  300F               	movlw	15
  2242  05B7  00AA               	movwf	??_pac_B
  2243  05B8  082A               	movf	??_pac_B,w
  2244  05B9  00A3               	movwf	lcd_puts@LENGHT
  2245  05BA  120A  118A  2460  120A  118A  	fcall	_lcd_puts
  2246  05BF                     l63:
  2247  05BF  0008               	return
  2248  05C0                     __end_of_pac_B:
  2249                           
  2250                           	psect	text13
  2251  05C0                     __ptext13:	
  2252 ;; *************** function _pac_A *****************
  2253 ;; Defined at:
  2254 ;;		line 54 in file "main.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;		None
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;		None
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  1    wreg      void 
  2261 ;; Registers used:
  2262 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2268 ;;      Params:         0       0       0       0       0
  2269 ;;      Locals:         0       0       0       0       0
  2270 ;;      Temps:          0       1       0       0       0
  2271 ;;      Totals:         0       1       0       0       0
  2272 ;;Total ram usage:        1 bytes
  2273 ;; Hardware stack levels used: 1
  2274 ;; Hardware stack levels required when called: 7
  2275 ;; This function calls:
  2276 ;;		_lcd_goto
  2277 ;;		_lcd_puts
  2278 ;; This function is called by:
  2279 ;;		_main
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           
  2284                           ;psect for function _pac_A
  2285  05C0                     _pac_A:
  2286  05C0                     l1911:	
  2287                           ;incstack = 0
  2288                           ; Regs used in _pac_A: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2289                           
  2290                           
  2291                           ;main.c: 55:     option = ' ';
  2292  05C0  3020               	movlw	32
  2293  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  2294  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  2295  05C3  00AA               	movwf	??_pac_A
  2296  05C4  082A               	movf	??_pac_A,w
  2297  05C5  00BD               	movwf	_option
  2298  05C6                     l1913:
  2299                           
  2300                           ;main.c: 56:     lcd_goto(1, 1);
  2301  05C6  01A1               	clrf	lcd_goto@col
  2302  05C7  0AA1               	incf	lcd_goto@col,f
  2303  05C8  3001               	movlw	1
  2304  05C9  120A  118A  2425  120A  118A  	fcall	_lcd_goto
  2305  05CE                     l1915:
  2306                           
  2307                           ;main.c: 57:     lcd_puts("PAC EM A       ", 15);
  2308  05CE  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2309  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  2310  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  2311  05D1  00A1               	movwf	lcd_puts@vector
  2312  05D2  3080               	movlw	128
  2313  05D3  00A2               	movwf	lcd_puts@vector+1
  2314  05D4  300F               	movlw	15
  2315  05D5  00AA               	movwf	??_pac_A
  2316  05D6  082A               	movf	??_pac_A,w
  2317  05D7  00A3               	movwf	lcd_puts@LENGHT
  2318  05D8  120A  118A  2460  120A  118A  	fcall	_lcd_puts
  2319  05DD                     l60:
  2320  05DD  0008               	return
  2321  05DE                     __end_of_pac_A:
  2322                           
  2323                           	psect	text14
  2324  05DE                     __ptext14:	
  2325 ;; *************** function _ligar_motor *****************
  2326 ;; Defined at:
  2327 ;;		line 89 in file "main.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;		None
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;		None
  2332 ;; Return value:  Size  Location     Type
  2333 ;;                  1    wreg      void 
  2334 ;; Registers used:
  2335 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2341 ;;      Params:         0       0       0       0       0
  2342 ;;      Locals:         0       0       0       0       0
  2343 ;;      Temps:          0       1       0       0       0
  2344 ;;      Totals:         0       1       0       0       0
  2345 ;;Total ram usage:        1 bytes
  2346 ;; Hardware stack levels used: 1
  2347 ;; Hardware stack levels required when called: 7
  2348 ;; This function calls:
  2349 ;;		_lcd_goto
  2350 ;;		_lcd_puts
  2351 ;; This function is called by:
  2352 ;;		_main
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           
  2357                           ;psect for function _ligar_motor
  2358  05DE                     _ligar_motor:
  2359  05DE                     l1945:	
  2360                           ;incstack = 0
  2361                           ; Regs used in _ligar_motor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2362                           
  2363                           
  2364                           ;main.c: 90:     option = ' ';
  2365  05DE  3020               	movlw	32
  2366  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  2367  05E0  1303               	bcf	3,6	;RP1=0, select bank0
  2368  05E1  00AA               	movwf	??_ligar_motor
  2369  05E2  082A               	movf	??_ligar_motor,w
  2370  05E3  00BD               	movwf	_option
  2371  05E4                     l1947:
  2372                           
  2373                           ;main.c: 91:     lcd_goto(1, 1);
  2374  05E4  01A1               	clrf	lcd_goto@col
  2375  05E5  0AA1               	incf	lcd_goto@col,f
  2376  05E6  3001               	movlw	1
  2377  05E7  120A  118A  2425  120A  118A  	fcall	_lcd_goto
  2378  05EC                     l1949:
  2379                           
  2380                           ;main.c: 92:     lcd_puts("LIGUE O MOTOR  ", 15);
  2381  05EC  3061               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2382  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  2383  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  2384  05EF  00A1               	movwf	lcd_puts@vector
  2385  05F0  3080               	movlw	128
  2386  05F1  00A2               	movwf	lcd_puts@vector+1
  2387  05F2  300F               	movlw	15
  2388  05F3  00AA               	movwf	??_ligar_motor
  2389  05F4  082A               	movf	??_ligar_motor,w
  2390  05F5  00A3               	movwf	lcd_puts@LENGHT
  2391  05F6  120A  118A  2460  120A  118A  	fcall	_lcd_puts
  2392  05FB                     l78:
  2393  05FB  0008               	return
  2394  05FC                     __end_of_ligar_motor:
  2395                           
  2396                           	psect	text15
  2397  06C0                     __ptext15:	
  2398 ;; *************** function _lcd_init *****************
  2399 ;; Defined at:
  2400 ;;		line 181 in file "lcd.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;		None
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;		None
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1    wreg      void 
  2407 ;; Registers used:
  2408 ;;		wreg, status,2, status,0, pclath, cstack
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2414 ;;      Params:         0       0       0       0       0
  2415 ;;      Locals:         0       0       0       0       0
  2416 ;;      Temps:          0       0       0       0       0
  2417 ;;      Totals:         0       0       0       0       0
  2418 ;;Total ram usage:        0 bytes
  2419 ;; Hardware stack levels used: 1
  2420 ;; Hardware stack levels required when called: 8
  2421 ;; This function calls:
  2422 ;;		_lcd_init_4bits
  2423 ;;		_lcd_init_8bits
  2424 ;; This function is called by:
  2425 ;;		_main
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           
  2430                           ;psect for function _lcd_init
  2431  06C0                     _lcd_init:
  2432  06C0                     l1971:	
  2433                           ;incstack = 0
  2434 ;; hardware stack exceeded
  2435                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2436                           
  2437  06C0                     l1975:	
  2438                           ;lcd.c: 183:     if (4 == 8)
  2439                           
  2440                           
  2441                           ;lcd.c: 186:         lcd_init_4bits();
  2442  06C0  120A  118A  231C  120A  118A  	fcall	_lcd_init_4bits
  2443  06C5                     l220:
  2444  06C5  0008               	return
  2445  06C6                     __end_of_lcd_init:
  2446                           
  2447                           	psect	text16
  2448  03AB                     __ptext16:	
  2449 ;; *************** function _lcd_init_8bits *****************
  2450 ;; Defined at:
  2451 ;;		line 142 in file "lcd.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;		None
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;		None
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  1    wreg      void 
  2458 ;; Registers used:
  2459 ;;		wreg, status,2, status,0, pclath, cstack
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2465 ;;      Params:         0       0       0       0       0
  2466 ;;      Locals:         0       0       0       0       0
  2467 ;;      Temps:          0       0       0       0       0
  2468 ;;      Totals:         0       0       0       0       0
  2469 ;;Total ram usage:        0 bytes
  2470 ;; Hardware stack levels used: 1
  2471 ;; Hardware stack levels required when called: 7
  2472 ;; This function calls:
  2473 ;;		_lcd_clear
  2474 ;;		_lcd_cmd
  2475 ;;		_lcd_delay_2ms
  2476 ;;		_lcd_delay_40ms
  2477 ;; This function is called by:
  2478 ;;		_lcd_init
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           
  2483                           ;psect for function _lcd_init_8bits
  2484  03AB                     _lcd_init_8bits:
  2485  03AB                     l1907:	
  2486                           ;incstack = 0
  2487 ;; hardware stack exceeded
  2488                           ; Regs used in _lcd_init_8bits: [wreg+status,2+status,0+pclath+cstack]
  2489                           
  2490                           
  2491                           ;lcd.c: 145:     lcd_delay_40ms();
  2492  03AB  120A  118A  269C  120A  118A  	fcall	_lcd_delay_40ms
  2493                           
  2494                           ;lcd.c: 147:  lcd_cmd(0x30);
  2495  03B0  3030               	movlw	48
  2496  03B1  120A  118A  268C  120A  118A  	fcall	_lcd_cmd
  2497                           
  2498                           ;lcd.c: 148:     lcd_delay_2ms();
  2499  03B6  120A  118A  26B6  120A  118A  	fcall	_lcd_delay_2ms
  2500                           
  2501                           ;lcd.c: 149:  lcd_cmd(0x30);
  2502  03BB  3030               	movlw	48
  2503  03BC  120A  118A  268C  120A  118A  	fcall	_lcd_cmd
  2504                           
  2505                           ;lcd.c: 150:     lcd_delay_2ms();
  2506  03C1  120A  118A  26B6  120A  118A  	fcall	_lcd_delay_2ms
  2507                           
  2508                           ;lcd.c: 151:  lcd_cmd(0x30);
  2509  03C6  3030               	movlw	48
  2510  03C7  120A  118A  268C  120A  118A  	fcall	_lcd_cmd
  2511                           
  2512                           ;lcd.c: 152:     lcd_delay_2ms();
  2513  03CC  120A  118A  26B6  120A  118A  	fcall	_lcd_delay_2ms
  2514                           
  2515                           ;lcd.c: 154:  lcd_cmd(0x38);
  2516  03D1  3038               	movlw	56
  2517  03D2  120A  118A  268C  120A  118A  	fcall	_lcd_cmd
  2518                           
  2519                           ;lcd.c: 155:  lcd_cmd(0x06);
  2520  03D7  3006               	movlw	6
  2521  03D8  120A  118A  268C  120A  118A  	fcall	_lcd_cmd
  2522                           
  2523                           ;lcd.c: 156:  lcd_cmd(0x0E);
  2524  03DD  300E               	movlw	14
  2525  03DE  120A  118A  268C  120A  118A  	fcall	_lcd_cmd
  2526                           
  2527                           ;lcd.c: 157:     lcd_clear();
  2528  03E3  120A  118A  26AA  120A  118A  	fcall	_lcd_clear
  2529  03E8                     l212:
  2530  03E8  0008               	return
  2531  03E9                     __end_of_lcd_init_8bits:
  2532                           
  2533                           	psect	text17
  2534  031C                     __ptext17:	
  2535 ;; *************** function _lcd_init_4bits *****************
  2536 ;; Defined at:
  2537 ;;		line 160 in file "lcd.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;		None
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;		None
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  1    wreg      void 
  2544 ;; Registers used:
  2545 ;;		wreg, status,2, status,0, pclath, cstack
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2551 ;;      Params:         0       0       0       0       0
  2552 ;;      Locals:         0       0       0       0       0
  2553 ;;      Temps:          0       0       0       0       0
  2554 ;;      Totals:         0       0       0       0       0
  2555 ;;Total ram usage:        0 bytes
  2556 ;; Hardware stack levels used: 1
  2557 ;; Hardware stack levels required when called: 7
  2558 ;; This function calls:
  2559 ;;		_lcd_clear
  2560 ;;		_lcd_cmd
  2561 ;;		_lcd_delay_2ms
  2562 ;;		_lcd_delay_40ms
  2563 ;;		_lcd_send_nibble
  2564 ;; This function is called by:
  2565 ;;		_lcd_init
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           
  2570                           ;psect for function _lcd_init_4bits
  2571  031C                     _lcd_init_4bits:
  2572  031C                     l1909:	
  2573                           ;incstack = 0
  2574 ;; hardware stack exceeded
  2575                           ; Regs used in _lcd_init_4bits: [wreg+status,2+status,0+pclath+cstack]
  2576                           
  2577                           
  2578                           ;lcd.c: 163:     lcd_delay_40ms();
  2579  031C  120A  118A  269C  120A  118A  	fcall	_lcd_delay_40ms
  2580                           
  2581                           ;lcd.c: 165:     lcd_send_nibble(0x03);
  2582  0321  3003               	movlw	3
  2583  0322  120A  118A  24BE  120A  118A  	fcall	_lcd_send_nibble
  2584                           
  2585                           ;lcd.c: 166:     lcd_delay_2ms();
  2586  0327  120A  118A  26B6  120A  118A  	fcall	_lcd_delay_2ms
  2587                           
  2588                           ;lcd.c: 167:     lcd_send_nibble(0x03);
  2589  032C  3003               	movlw	3
  2590  032D  120A  118A  24BE  120A  118A  	fcall	_lcd_send_nibble
  2591                           
  2592                           ;lcd.c: 168:     lcd_delay_2ms();
  2593  0332  120A  118A  26B6  120A  118A  	fcall	_lcd_delay_2ms
  2594                           
  2595                           ;lcd.c: 169:     lcd_send_nibble(0x03);
  2596  0337  3003               	movlw	3
  2597  0338  120A  118A  24BE  120A  118A  	fcall	_lcd_send_nibble
  2598                           
  2599                           ;lcd.c: 170:     lcd_delay_2ms();
  2600  033D  120A  118A  26B6  120A  118A  	fcall	_lcd_delay_2ms
  2601                           
  2602                           ;lcd.c: 172:     lcd_send_nibble(0x02);
  2603  0342  3002               	movlw	2
  2604  0343  120A  118A  24BE  120A  118A  	fcall	_lcd_send_nibble
  2605                           
  2606                           ;lcd.c: 173:     lcd_delay_2ms();
  2607  0348  120A  118A  26B6  120A  118A  	fcall	_lcd_delay_2ms
  2608                           
  2609                           ;lcd.c: 175:  lcd_cmd(0x28);
  2610  034D  3028               	movlw	40
  2611  034E  120A  118A  268C  120A  118A  	fcall	_lcd_cmd
  2612                           
  2613                           ;lcd.c: 176:  lcd_cmd(0x06);
  2614  0353  3006               	movlw	6
  2615  0354  120A  118A  268C  120A  118A  	fcall	_lcd_cmd
  2616                           
  2617                           ;lcd.c: 177:  lcd_cmd(0x0E);
  2618  0359  300E               	movlw	14
  2619  035A  120A  118A  268C  120A  118A  	fcall	_lcd_cmd
  2620                           
  2621                           ;lcd.c: 178:     lcd_clear();
  2622  035F  120A  118A  26AA  120A  118A  	fcall	_lcd_clear
  2623  0364                     l215:
  2624  0364  0008               	return
  2625  0365                     __end_of_lcd_init_4bits:
  2626                           
  2627                           	psect	text18
  2628  069C                     __ptext18:	
  2629 ;; *************** function _lcd_delay_40ms *****************
  2630 ;; Defined at:
  2631 ;;		line 59 in file "lcd.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;		None
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;		None
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  1    wreg      void 
  2638 ;; Registers used:
  2639 ;;		wreg
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2645 ;;      Params:         0       0       0       0       0
  2646 ;;      Locals:         0       0       0       0       0
  2647 ;;      Temps:          3       0       0       0       0
  2648 ;;      Totals:         3       0       0       0       0
  2649 ;;Total ram usage:        3 bytes
  2650 ;; Hardware stack levels used: 1
  2651 ;; Hardware stack levels required when called: 1
  2652 ;; This function calls:
  2653 ;;		Nothing
  2654 ;; This function is called by:
  2655 ;;		_lcd_init_8bits
  2656 ;;		_lcd_init_4bits
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660                           
  2661                           ;psect for function _lcd_delay_40ms
  2662  069C                     _lcd_delay_40ms:
  2663  069C                     l1377:	
  2664                           ;incstack = 0
  2665                           ; Regs used in _lcd_delay_40ms: [wreg]
  2666                           
  2667  069C  3002               	movlw	2
  2668  069D  00F5               	movwf	??_lcd_delay_40ms+2
  2669  069E  3004               	movlw	4
  2670  069F  00F4               	movwf	??_lcd_delay_40ms+1
  2671  06A0  30BA               	movlw	186
  2672  06A1  00F3               	movwf	??_lcd_delay_40ms
  2673  06A2                     u1567:
  2674  06A2  0BF3               	decfsz	??_lcd_delay_40ms,f
  2675  06A3  2EA2               	goto	u1567
  2676  06A4  0BF4               	decfsz	??_lcd_delay_40ms+1,f
  2677  06A5  2EA2               	goto	u1567
  2678  06A6  0BF5               	decfsz	??_lcd_delay_40ms+2,f
  2679  06A7  2EA2               	goto	u1567
  2680  06A8  0000               	nop
  2681  06A9                     l173:
  2682  06A9  0008               	return
  2683  06AA                     __end_of_lcd_delay_40ms:
  2684                           
  2685                           	psect	text19
  2686  06AA                     __ptext19:	
  2687 ;; *************** function _lcd_clear *****************
  2688 ;; Defined at:
  2689 ;;		line 189 in file "lcd.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;		None
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;		None
  2694 ;; Return value:  Size  Location     Type
  2695 ;;                  1    wreg      void 
  2696 ;; Registers used:
  2697 ;;		wreg, status,2, status,0, pclath, cstack
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2703 ;;      Params:         0       0       0       0       0
  2704 ;;      Locals:         0       0       0       0       0
  2705 ;;      Temps:          0       0       0       0       0
  2706 ;;      Totals:         0       0       0       0       0
  2707 ;;Total ram usage:        0 bytes
  2708 ;; Hardware stack levels used: 1
  2709 ;; Hardware stack levels required when called: 6
  2710 ;; This function calls:
  2711 ;;		_lcd_cmd
  2712 ;;		_lcd_delay_2ms
  2713 ;; This function is called by:
  2714 ;;		_lcd_init_8bits
  2715 ;;		_lcd_init_4bits
  2716 ;;		_lcd_shutdown
  2717 ;; This function uses a non-reentrant model
  2718 ;;
  2719                           
  2720                           
  2721                           ;psect for function _lcd_clear
  2722  06AA                     _lcd_clear:
  2723  06AA                     l1829:	
  2724                           ;incstack = 0
  2725 ;; hardware stack exceeded
  2726                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2727                           
  2728                           
  2729                           ;lcd.c: 191:     lcd_cmd(0x01);
  2730  06AA  3001               	movlw	1
  2731  06AB  120A  118A  268C  120A  118A  	fcall	_lcd_cmd
  2732                           
  2733                           ;lcd.c: 192:     lcd_delay_2ms();
  2734  06B0  120A  118A  26B6  120A  118A  	fcall	_lcd_delay_2ms
  2735  06B5                     l223:
  2736  06B5  0008               	return
  2737  06B6                     __end_of_lcd_clear:
  2738                           
  2739                           	psect	text20
  2740  06B6                     __ptext20:	
  2741 ;; *************** function _lcd_delay_2ms *****************
  2742 ;; Defined at:
  2743 ;;		line 58 in file "lcd.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;		None
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;		None
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  1    wreg      void 
  2750 ;; Registers used:
  2751 ;;		wreg
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2757 ;;      Params:         0       0       0       0       0
  2758 ;;      Locals:         0       0       0       0       0
  2759 ;;      Temps:          2       0       0       0       0
  2760 ;;      Totals:         2       0       0       0       0
  2761 ;;Total ram usage:        2 bytes
  2762 ;; Hardware stack levels used: 1
  2763 ;; Hardware stack levels required when called: 1
  2764 ;; This function calls:
  2765 ;;		Nothing
  2766 ;; This function is called by:
  2767 ;;		_lcd_init_8bits
  2768 ;;		_lcd_init_4bits
  2769 ;;		_lcd_clear
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           
  2774                           ;psect for function _lcd_delay_2ms
  2775  06B6                     _lcd_delay_2ms:
  2776  06B6                     l1321:	
  2777                           ;incstack = 0
  2778                           ; Regs used in _lcd_delay_2ms: [wreg]
  2779                           
  2780  06B6  300D               	movlw	13
  2781  06B7  00F4               	movwf	??_lcd_delay_2ms+1
  2782  06B8  30FB               	movlw	251
  2783  06B9  00F3               	movwf	??_lcd_delay_2ms
  2784  06BA                     u1577:
  2785  06BA  0BF3               	decfsz	??_lcd_delay_2ms,f
  2786  06BB  2EBA               	goto	u1577
  2787  06BC  0BF4               	decfsz	??_lcd_delay_2ms+1,f
  2788  06BD  2EBA               	goto	u1577
  2789  06BE  2EBF               	nop2
  2790  06BF                     l170:
  2791  06BF  0008               	return
  2792  06C0                     __end_of_lcd_delay_2ms:
  2793                           
  2794                           	psect	text21
  2795  061A                     __ptext21:	
  2796 ;; *************** function _init *****************
  2797 ;; Defined at:
  2798 ;;		line 15 in file "main.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;		None
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;		None
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      void 
  2805 ;; Registers used:
  2806 ;;		wreg, status,2
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2812 ;;      Params:         0       0       0       0       0
  2813 ;;      Locals:         0       0       0       0       0
  2814 ;;      Temps:          0       0       0       0       0
  2815 ;;      Totals:         0       0       0       0       0
  2816 ;;Total ram usage:        0 bytes
  2817 ;; Hardware stack levels used: 1
  2818 ;; Hardware stack levels required when called: 1
  2819 ;; This function calls:
  2820 ;;		Nothing
  2821 ;; This function is called by:
  2822 ;;		_main
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           
  2827                           ;psect for function _init
  2828  061A                     _init:
  2829  061A                     l1465:	
  2830                           ;incstack = 0
  2831                           ; Regs used in _init: [wreg+status,2]
  2832                           
  2833                           
  2834                           ;main.c: 16:     PORTA = 0b00000000;
  2835  061A  1283               	bcf	3,5	;RP0=0, select bank0
  2836  061B  1303               	bcf	3,6	;RP1=0, select bank0
  2837  061C  0185               	clrf	5	;volatile
  2838                           
  2839                           ;main.c: 17:     PORTB = 0b00000000;
  2840  061D  0186               	clrf	6	;volatile
  2841                           
  2842                           ;main.c: 18:     PORTC = 0b00000000;
  2843  061E  0187               	clrf	7	;volatile
  2844                           
  2845                           ;main.c: 19:     PORTD = 0b00000000;
  2846  061F  0188               	clrf	8	;volatile
  2847                           
  2848                           ;main.c: 20:     PORTE = 0b00000000;
  2849  0620  0189               	clrf	9	;volatile
  2850  0621                     l1467:
  2851                           
  2852                           ;main.c: 23:     TRISA = 0b00010000;
  2853  0621  3010               	movlw	16
  2854  0622  1683               	bsf	3,5	;RP0=1, select bank1
  2855  0623  1303               	bcf	3,6	;RP1=0, select bank1
  2856  0624  0085               	movwf	5	;volatile
  2857  0625                     l1469:
  2858                           
  2859                           ;main.c: 24:     TRISB = 0b01110000;
  2860  0625  3070               	movlw	112
  2861  0626  0086               	movwf	6	;volatile
  2862                           
  2863                           ;main.c: 25:     TRISC = 0b00000000;
  2864  0627  0187               	clrf	7	;volatile
  2865                           
  2866                           ;main.c: 26:     TRISD = 0b00000000;
  2867  0628  0188               	clrf	8	;volatile
  2868                           
  2869                           ;main.c: 27:     TRISE = 0b00000000;
  2870  0629  0189               	clrf	9	;volatile
  2871  062A                     l1471:
  2872                           
  2873                           ;main.c: 34:     OPTION_REG = 0b10101000;
  2874  062A  30A8               	movlw	168
  2875  062B  0081               	movwf	1	;volatile
  2876  062C                     l1473:
  2877                           
  2878                           ;main.c: 41:     INTCON = 0b00111000;
  2879  062C  3038               	movlw	56
  2880  062D  008B               	movwf	11	;volatile
  2881  062E                     l1475:
  2882                           
  2883                           ;main.c: 48:     TMR0 = (256 - 1);
  2884  062E  30FF               	movlw	255
  2885  062F  1283               	bcf	3,5	;RP0=0, select bank0
  2886  0630  1303               	bcf	3,6	;RP1=0, select bank0
  2887  0631  0081               	movwf	1	;volatile
  2888  0632                     l1477:
  2889                           
  2890                           ;main.c: 51:     CMCON = 0x07;
  2891  0632  3007               	movlw	7
  2892  0633  1683               	bsf	3,5	;RP0=1, select bank1
  2893  0634  1303               	bcf	3,6	;RP1=0, select bank1
  2894  0635  009C               	movwf	28	;volatile
  2895  0636                     l57:
  2896  0636  0008               	return
  2897  0637                     __end_of_init:
  2898                           
  2899                           	psect	text22
  2900  05FC                     __ptext22:	
  2901 ;; *************** function _esperando *****************
  2902 ;; Defined at:
  2903 ;;		line 83 in file "main.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;		None
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;		None
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  1    wreg      void 
  2910 ;; Registers used:
  2911 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2917 ;;      Params:         0       0       0       0       0
  2918 ;;      Locals:         0       0       0       0       0
  2919 ;;      Temps:          0       1       0       0       0
  2920 ;;      Totals:         0       1       0       0       0
  2921 ;;Total ram usage:        1 bytes
  2922 ;; Hardware stack levels used: 1
  2923 ;; Hardware stack levels required when called: 7
  2924 ;; This function calls:
  2925 ;;		_lcd_goto
  2926 ;;		_lcd_puts
  2927 ;; This function is called by:
  2928 ;;		_main
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           
  2933                           ;psect for function _esperando
  2934  05FC                     _esperando:
  2935  05FC                     l1939:	
  2936                           ;incstack = 0
  2937                           ; Regs used in _esperando: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2938                           
  2939                           
  2940                           ;main.c: 84:     option = ' ';
  2941  05FC  3020               	movlw	32
  2942  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  2943  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  2944  05FF  00AA               	movwf	??_esperando
  2945  0600  082A               	movf	??_esperando,w
  2946  0601  00BD               	movwf	_option
  2947  0602                     l1941:
  2948                           
  2949                           ;main.c: 85:     lcd_goto(1, 1);
  2950  0602  01A1               	clrf	lcd_goto@col
  2951  0603  0AA1               	incf	lcd_goto@col,f
  2952  0604  3001               	movlw	1
  2953  0605  120A  118A  2425  120A  118A  	fcall	_lcd_goto
  2954  060A                     l1943:
  2955                           
  2956                           ;main.c: 86:     lcd_puts("ESPERANDO PAC ", 15);
  2957  060A  3081               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2958  060B  1283               	bcf	3,5	;RP0=0, select bank0
  2959  060C  1303               	bcf	3,6	;RP1=0, select bank0
  2960  060D  00A1               	movwf	lcd_puts@vector
  2961  060E  3080               	movlw	128
  2962  060F  00A2               	movwf	lcd_puts@vector+1
  2963  0610  300F               	movlw	15
  2964  0611  00AA               	movwf	??_esperando
  2965  0612  082A               	movf	??_esperando,w
  2966  0613  00A3               	movwf	lcd_puts@LENGHT
  2967  0614  120A  118A  2460  120A  118A  	fcall	_lcd_puts
  2968  0619                     l75:
  2969  0619  0008               	return
  2970  061A                     __end_of_esperando:
  2971                           
  2972                           	psect	text23
  2973  0460                     __ptext23:	
  2974 ;; *************** function _lcd_puts *****************
  2975 ;; Defined at:
  2976 ;;		line 128 in file "lcd.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;  vector          2    1[BANK0 ] PTR unsigned char 
  2979 ;;		 -> char_value(5), STR_10(11), STR_9(16), STR_8(16), 
  2980 ;;		 -> STR_7(16), STR_6(15), STR_5(16), STR_4(16), 
  2981 ;;		 -> STR_3(16), STR_2(16), STR_1(16), 
  2982 ;;  LENGHT          1    3[BANK0 ] unsigned char 
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;  cnt             1    9[BANK0 ] unsigned char 
  2985 ;;  x               1    8[BANK0 ] unsigned char 
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      void 
  2988 ;; Registers used:
  2989 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2995 ;;      Params:         0       3       0       0       0
  2996 ;;      Locals:         0       2       0       0       0
  2997 ;;      Temps:          0       4       0       0       0
  2998 ;;      Totals:         0       9       0       0       0
  2999 ;;Total ram usage:        9 bytes
  3000 ;; Hardware stack levels used: 1
  3001 ;; Hardware stack levels required when called: 6
  3002 ;; This function calls:
  3003 ;;		_lcd_char
  3004 ;; This function is called by:
  3005 ;;		_pac_A
  3006 ;;		_pac_B
  3007 ;;		_pac_C
  3008 ;;		_pac_Erro
  3009 ;;		_pac_Remova
  3010 ;;		_esperando
  3011 ;;		_ligar_motor
  3012 ;;		_pac_null
  3013 ;;		_pac_dual
  3014 ;;		_qnt
  3015 ;;		_set_valor
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           
  3020                           ;psect for function _lcd_puts
  3021  0460                     _lcd_puts:
  3022  0460                     l1881:	
  3023                           ;incstack = 0
  3024 ;; using string table level
  3025                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3026                           
  3027                           
  3028                           ;lcd.c: 128: void lcd_puts(unsigned char *vector, unsigned char LENGHT);lcd.c: 129: {;lc
      +                          d.c: 130:  unsigned char cnt;;lcd.c: 131:  unsigned char x;;lcd.c: 133:  PORTDbits.RD0 =
      +                           1;
  3029  0460  1283               	bcf	3,5	;RP0=0, select bank0
  3030  0461  1303               	bcf	3,6	;RP1=0, select bank0
  3031  0462  1408               	bsf	8,0	;volatile
  3032  0463                     l1883:
  3033                           
  3034                           ;lcd.c: 135:  for (cnt=0; cnt<LENGHT; cnt++)
  3035  0463  01A9               	clrf	lcd_puts@cnt
  3036  0464  2C8B               	goto	l1891
  3037  0465                     l1885:
  3038                           
  3039                           ;lcd.c: 136:  {;lcd.c: 137:         x = *(vector+cnt);
  3040  0465  0829               	movf	lcd_puts@cnt,w
  3041  0466  0721               	addwf	lcd_puts@vector,w
  3042  0467  00A5               	movwf	??_lcd_puts+1
  3043  0468  0822               	movf	lcd_puts@vector+1,w
  3044  0469  00A4               	movwf	??_lcd_puts
  3045  046A  1803               	skipnc
  3046  046B  0AA4               	incf	??_lcd_puts,f
  3047  046C  1FA9               	btfss	lcd_puts@cnt,7
  3048  046D  2C6F               	goto	u1460
  3049  046E  03A4               	decf	??_lcd_puts,f
  3050  046F                     u1460:
  3051  046F  1283               	bcf	3,5	;RP0=0, select bank0
  3052  0470  1303               	bcf	3,6	;RP1=0, select bank0
  3053  0471  0824               	movf	??_lcd_puts,w
  3054  0472  00A6               	movwf	??_lcd_puts+2
  3055  0473  0826               	movf	??_lcd_puts+2,w
  3056  0474  00FF               	movwf	btemp+1
  3057  0475  0825               	movf	??_lcd_puts+1,w
  3058  0476  0084               	movwf	4
  3059  0477  120A  118A  2200  120A  118A  	fcall	stringtab
  3060  047C  00A7               	movwf	??_lcd_puts+3
  3061  047D  0827               	movf	??_lcd_puts+3,w
  3062  047E  00A8               	movwf	lcd_puts@x
  3063  047F                     l1887:
  3064                           
  3065                           ;lcd.c: 138:         lcd_char(x);
  3066  047F  0828               	movf	lcd_puts@x,w
  3067  0480  120A  118A  267C  120A  118A  	fcall	_lcd_char
  3068  0485                     l1889:
  3069                           
  3070                           ;lcd.c: 139:  }
  3071  0485  3001               	movlw	1
  3072  0486  1283               	bcf	3,5	;RP0=0, select bank0
  3073  0487  1303               	bcf	3,6	;RP1=0, select bank0
  3074  0488  00A4               	movwf	??_lcd_puts
  3075  0489  0824               	movf	??_lcd_puts,w
  3076  048A  07A9               	addwf	lcd_puts@cnt,f
  3077  048B                     l1891:
  3078  048B  0823               	movf	lcd_puts@LENGHT,w
  3079  048C  0229               	subwf	lcd_puts@cnt,w
  3080  048D  1C03               	skipc
  3081  048E  2C90               	goto	u1471
  3082  048F  2C91               	goto	u1470
  3083  0490                     u1471:
  3084  0490  2C65               	goto	l1885
  3085  0491                     u1470:
  3086  0491                     l209:
  3087  0491  0008               	return
  3088  0492                     __end_of_lcd_puts:
  3089                           
  3090                           	psect	text24
  3091  067C                     __ptext24:	
  3092 ;; *************** function _lcd_char *****************
  3093 ;; Defined at:
  3094 ;;		line 116 in file "lcd.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;  data            1    wreg     unsigned char 
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;  data            1    0[BANK0 ] unsigned char 
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  1    wreg      void 
  3101 ;; Registers used:
  3102 ;;		wreg, status,2, status,0, pclath, cstack
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3108 ;;      Params:         0       0       0       0       0
  3109 ;;      Locals:         0       1       0       0       0
  3110 ;;      Temps:          0       0       0       0       0
  3111 ;;      Totals:         0       1       0       0       0
  3112 ;;Total ram usage:        1 bytes
  3113 ;; Hardware stack levels used: 1
  3114 ;; Hardware stack levels required when called: 5
  3115 ;; This function calls:
  3116 ;;		_lcd_byte_4bits
  3117 ;;		_lcd_byte_8bits
  3118 ;;		_lcd_delay_40us
  3119 ;; This function is called by:
  3120 ;;		_lcd_puts
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           
  3125                           ;psect for function _lcd_char
  3126  067C                     _lcd_char:
  3127                           
  3128                           ;incstack = 0
  3129                           ; Regs used in _lcd_char: [wreg+status,2+status,0+pclath+cstack]
  3130                           ;lcd_char@data stored from wreg
  3131  067C  1283               	bcf	3,5	;RP0=0, select bank0
  3132  067D  1303               	bcf	3,6	;RP1=0, select bank0
  3133  067E  00A0               	movwf	lcd_char@data
  3134  067F                     l1823:
  3135                           
  3136                           ;lcd.c: 116: void lcd_char(unsigned char data);lcd.c: 117: {;lcd.c: 118:     PORTDbits.R
      +                          D0 = 1;
  3137  067F  1408               	bsf	8,0	;volatile
  3138  0680                     l1827:	
  3139                           ;lcd.c: 120:     if (4 == 8)
  3140                           
  3141                           
  3142                           ;lcd.c: 123:         lcd_byte_4bits(data);
  3143  0680  0820               	movf	lcd_char@data,w
  3144  0681  120A  118A  250B  120A  118A  	fcall	_lcd_byte_4bits
  3145  0686                     l202:
  3146                           
  3147                           ;lcd.c: 125:     lcd_delay_40us();
  3148  0686  120A  118A  26C6  120A  118A  	fcall	_lcd_delay_40us
  3149  068B                     l203:
  3150  068B  0008               	return
  3151  068C                     __end_of_lcd_char:
  3152                           
  3153                           	psect	text25
  3154  0425                     __ptext25:	
  3155 ;; *************** function _lcd_goto *****************
  3156 ;; Defined at:
  3157 ;;		line 201 in file "lcd.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;  lin             1    wreg     unsigned char 
  3160 ;;  col             1    1[BANK0 ] unsigned char 
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;  lin             1    4[BANK0 ] unsigned char 
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3172 ;;      Params:         0       1       0       0       0
  3173 ;;      Locals:         0       1       0       0       0
  3174 ;;      Temps:          0       2       0       0       0
  3175 ;;      Totals:         0       4       0       0       0
  3176 ;;Total ram usage:        4 bytes
  3177 ;; Hardware stack levels used: 1
  3178 ;; Hardware stack levels required when called: 6
  3179 ;; This function calls:
  3180 ;;		_lcd_cmd
  3181 ;; This function is called by:
  3182 ;;		_pac_A
  3183 ;;		_pac_B
  3184 ;;		_pac_C
  3185 ;;		_pac_Erro
  3186 ;;		_pac_Remova
  3187 ;;		_esperando
  3188 ;;		_ligar_motor
  3189 ;;		_pac_null
  3190 ;;		_pac_dual
  3191 ;;		_qnt
  3192 ;;		_set_valor
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           
  3197                           ;psect for function _lcd_goto
  3198  0425                     _lcd_goto:
  3199                           
  3200                           ;incstack = 0
  3201                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3202                           ;lcd_goto@lin stored from wreg
  3203  0425  1283               	bcf	3,5	;RP0=0, select bank0
  3204  0426  1303               	bcf	3,6	;RP1=0, select bank0
  3205  0427  00A4               	movwf	lcd_goto@lin
  3206  0428                     l1861:
  3207                           
  3208                           ;lcd.c: 201: void lcd_goto(unsigned char lin, unsigned char col);lcd.c: 202: {;lcd.c: 20
      +                          3:     switch(lin)
  3209  0428  2C49               	goto	l1873
  3210  0429                     l1863:
  3211                           
  3212                           ;lcd.c: 206:         {;lcd.c: 207:             lcd_cmd(0x80+col);
  3213  0429  0821               	movf	lcd_goto@col,w
  3214  042A  3E80               	addlw	128
  3215  042B  120A  118A  268C  120A  118A  	fcall	_lcd_cmd
  3216                           
  3217                           ;lcd.c: 208:             break;
  3218  0430  2C5F               	goto	l235
  3219  0431                     l1865:
  3220                           
  3221                           ;lcd.c: 211:         {;lcd.c: 212:             lcd_cmd(0xc0+col);
  3222  0431  0821               	movf	lcd_goto@col,w
  3223  0432  3EC0               	addlw	192
  3224  0433  120A  118A  268C  120A  118A  	fcall	_lcd_cmd
  3225                           
  3226                           ;lcd.c: 213:             break;
  3227  0438  2C5F               	goto	l235
  3228  0439                     l1867:
  3229                           
  3230                           ;lcd.c: 216:         {;lcd.c: 217:             lcd_cmd(0x90+col);
  3231  0439  0821               	movf	lcd_goto@col,w
  3232  043A  3E90               	addlw	144
  3233  043B  120A  118A  268C  120A  118A  	fcall	_lcd_cmd
  3234                           
  3235                           ;lcd.c: 218:             break;
  3236  0440  2C5F               	goto	l235
  3237  0441                     l1869:
  3238                           
  3239                           ;lcd.c: 221:         {;lcd.c: 222:             lcd_cmd(0xd0+col);
  3240  0441  0821               	movf	lcd_goto@col,w
  3241  0442  3ED0               	addlw	208
  3242  0443  120A  118A  268C  120A  118A  	fcall	_lcd_cmd
  3243                           
  3244                           ;lcd.c: 223:             break;
  3245  0448  2C5F               	goto	l235
  3246  0449                     l1873:
  3247  0449  0824               	movf	lcd_goto@lin,w
  3248  044A  00A2               	movwf	??_lcd_goto
  3249  044B  01A3               	clrf	??_lcd_goto+1
  3250                           
  3251                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3252                           ; Switch size 1, requested type "simple"
  3253                           ; Number of cases is 1, Range of values is 0 to 0
  3254                           ; switch strategies available:
  3255                           ; Name         Instructions Cycles
  3256                           ; simple_byte            4     3 (average)
  3257                           ; direct_byte           11     8 (fixed)
  3258                           ; jumptable            260     6 (fixed)
  3259                           ;	Chosen strategy is simple_byte
  3260  044C  0823               	movf	??_lcd_goto+1,w
  3261  044D  3A00               	xorlw	0	; case 0
  3262  044E  1903               	skipnz
  3263  044F  2C51               	goto	l2097
  3264  0450  2C5F               	goto	l235
  3265  0451                     l2097:
  3266                           
  3267                           ; Switch size 1, requested type "simple"
  3268                           ; Number of cases is 4, Range of values is 1 to 4
  3269                           ; switch strategies available:
  3270                           ; Name         Instructions Cycles
  3271                           ; simple_byte           13     7 (average)
  3272                           ; direct_byte           23    11 (fixed)
  3273                           ; jumptable            263     9 (fixed)
  3274                           ;	Chosen strategy is simple_byte
  3275  0451  0822               	movf	??_lcd_goto,w
  3276  0452  3A01               	xorlw	1	; case 1
  3277  0453  1903               	skipnz
  3278  0454  2C29               	goto	l1863
  3279  0455  3A03               	xorlw	3	; case 2
  3280  0456  1903               	skipnz
  3281  0457  2C31               	goto	l1865
  3282  0458  3A01               	xorlw	1	; case 3
  3283  0459  1903               	skipnz
  3284  045A  2C39               	goto	l1867
  3285  045B  3A07               	xorlw	7	; case 4
  3286  045C  1903               	skipnz
  3287  045D  2C41               	goto	l1869
  3288  045E  2C5F               	goto	l235
  3289  045F                     l235:
  3290  045F  0008               	return
  3291  0460                     __end_of_lcd_goto:
  3292                           
  3293                           	psect	text26
  3294  068C                     __ptext26:	
  3295 ;; *************** function _lcd_cmd *****************
  3296 ;; Defined at:
  3297 ;;		line 104 in file "lcd.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;  data            1    wreg     unsigned char 
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;  data            1    0[BANK0 ] unsigned char 
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  1    wreg      void 
  3304 ;; Registers used:
  3305 ;;		wreg, status,2, status,0, pclath, cstack
  3306 ;; Tracked objects:
  3307 ;;		On entry : 0/0
  3308 ;;		On exit  : 0/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3311 ;;      Params:         0       0       0       0       0
  3312 ;;      Locals:         0       1       0       0       0
  3313 ;;      Temps:          0       0       0       0       0
  3314 ;;      Totals:         0       1       0       0       0
  3315 ;;Total ram usage:        1 bytes
  3316 ;; Hardware stack levels used: 1
  3317 ;; Hardware stack levels required when called: 5
  3318 ;; This function calls:
  3319 ;;		_lcd_byte_4bits
  3320 ;;		_lcd_byte_8bits
  3321 ;;		_lcd_delay_40us
  3322 ;; This function is called by:
  3323 ;;		_lcd_init_8bits
  3324 ;;		_lcd_init_4bits
  3325 ;;		_lcd_clear
  3326 ;;		_lcd_goto
  3327 ;;		_lcd_shutdown
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331                           
  3332                           ;psect for function _lcd_cmd
  3333  068C                     _lcd_cmd:
  3334                           
  3335                           ;incstack = 0
  3336                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  3337                           ;lcd_cmd@data stored from wreg
  3338  068C  1283               	bcf	3,5	;RP0=0, select bank0
  3339  068D  1303               	bcf	3,6	;RP1=0, select bank0
  3340  068E  00A0               	movwf	lcd_cmd@data
  3341  068F                     l1769:
  3342                           
  3343                           ;lcd.c: 104: void lcd_cmd(unsigned char data);lcd.c: 105: {;lcd.c: 106:  PORTDbits.RD0 =
      +                           0;
  3344  068F  1008               	bcf	8,0	;volatile
  3345  0690                     l1773:	
  3346                           ;lcd.c: 108:     if (4 == 8)
  3347                           
  3348                           
  3349                           ;lcd.c: 111:         lcd_byte_4bits(data);
  3350  0690  0820               	movf	lcd_cmd@data,w
  3351  0691  120A  118A  250B  120A  118A  	fcall	_lcd_byte_4bits
  3352  0696                     l197:
  3353                           
  3354                           ;lcd.c: 113:     lcd_delay_40us();
  3355  0696  120A  118A  26C6  120A  118A  	fcall	_lcd_delay_40us
  3356  069B                     l198:
  3357  069B  0008               	return
  3358  069C                     __end_of_lcd_cmd:
  3359                           
  3360                           	psect	text27
  3361  06C6                     __ptext27:	
  3362 ;; *************** function _lcd_delay_40us *****************
  3363 ;; Defined at:
  3364 ;;		line 57 in file "lcd.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;		None
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;		None
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      void 
  3371 ;; Registers used:
  3372 ;;		wreg
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3378 ;;      Params:         0       0       0       0       0
  3379 ;;      Locals:         0       0       0       0       0
  3380 ;;      Temps:          1       0       0       0       0
  3381 ;;      Totals:         1       0       0       0       0
  3382 ;;Total ram usage:        1 bytes
  3383 ;; Hardware stack levels used: 1
  3384 ;; Hardware stack levels required when called: 1
  3385 ;; This function calls:
  3386 ;;		Nothing
  3387 ;; This function is called by:
  3388 ;;		_lcd_cmd
  3389 ;;		_lcd_char
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           
  3394                           ;psect for function _lcd_delay_40us
  3395  06C6                     _lcd_delay_40us:
  3396  06C6                     l1757:	
  3397                           ;incstack = 0
  3398                           ; Regs used in _lcd_delay_40us: [wreg]
  3399                           
  3400  06C6  3042               	movlw	66
  3401  06C7  00F3               	movwf	??_lcd_delay_40us
  3402  06C8                     u1587:
  3403  06C8  0BF3               	decfsz	??_lcd_delay_40us,f
  3404  06C9  2EC8               	goto	u1587
  3405  06CA  0000               	nop
  3406  06CB                     l167:
  3407  06CB  0008               	return
  3408  06CC                     __end_of_lcd_delay_40us:
  3409                           
  3410                           	psect	text28
  3411  06CC                     __ptext28:	
  3412 ;; *************** function _lcd_byte_8bits *****************
  3413 ;; Defined at:
  3414 ;;		line 98 in file "lcd.c"
  3415 ;; Parameters:    Size  Location     Type
  3416 ;;  data            1    wreg     unsigned char 
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;  data            1    0[COMMON] unsigned char 
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  1    wreg      void 
  3421 ;; Registers used:
  3422 ;;		wreg, status,2, status,0, pclath, cstack
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3428 ;;      Params:         0       0       0       0       0
  3429 ;;      Locals:         0       0       0       0       0
  3430 ;;      Temps:          0       0       0       0       0
  3431 ;;      Totals:         0       0       0       0       0
  3432 ;;Total ram usage:        0 bytes
  3433 ;; Hardware stack levels used: 1
  3434 ;; Hardware stack levels required when called: 3
  3435 ;; This function calls:
  3436 ;;		_lcd_en_pulse
  3437 ;; This function is called by:
  3438 ;;		_lcd_cmd
  3439 ;;		_lcd_char
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           
  3444                           ;psect for function _lcd_byte_8bits
  3445  06CC                     _lcd_byte_8bits:
  3446  06CC                     l1767:	
  3447                           ;incstack = 0
  3448                           ; Regs used in _lcd_byte_8bits: [wreg+status,2+status,0+pclath+cstack]
  3449                           
  3450                           
  3451                           ;lcd.c: 101:     lcd_en_pulse();
  3452  06CC  120A  118A  266B  120A  118A  	fcall	_lcd_en_pulse
  3453  06D1                     l193:
  3454  06D1  0008               	return
  3455  06D2                     __end_of_lcd_byte_8bits:
  3456                           
  3457                           	psect	text29
  3458  050B                     __ptext29:	
  3459 ;; *************** function _lcd_byte_4bits *****************
  3460 ;; Defined at:
  3461 ;;		line 85 in file "lcd.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  data            1    wreg     unsigned char 
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;  data            1    6[COMMON] unsigned char 
  3466 ;;  nibble          1    7[COMMON] unsigned char 
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  1    wreg      void 
  3469 ;; Registers used:
  3470 ;;		wreg, status,2, status,0, pclath, cstack
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3476 ;;      Params:         0       0       0       0       0
  3477 ;;      Locals:         2       0       0       0       0
  3478 ;;      Temps:          2       0       0       0       0
  3479 ;;      Totals:         4       0       0       0       0
  3480 ;;Total ram usage:        4 bytes
  3481 ;; Hardware stack levels used: 1
  3482 ;; Hardware stack levels required when called: 4
  3483 ;; This function calls:
  3484 ;;		_lcd_send_nibble
  3485 ;; This function is called by:
  3486 ;;		_lcd_cmd
  3487 ;;		_lcd_char
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           
  3492                           ;psect for function _lcd_byte_4bits
  3493  050B                     _lcd_byte_4bits:
  3494                           
  3495                           ;incstack = 0
  3496                           ; Regs used in _lcd_byte_4bits: [wreg+status,2+status,0+pclath+cstack]
  3497                           ;lcd_byte_4bits@data stored from wreg
  3498  050B  00F6               	movwf	lcd_byte_4bits@data
  3499  050C                     l1759:
  3500                           
  3501                           ;lcd.c: 85: void lcd_byte_4bits(unsigned char data);lcd.c: 86: {;lcd.c: 87:     unsigned
      +                           char nibble;;lcd.c: 90:     nibble = (data >> 4);
  3502  050C  0876               	movf	lcd_byte_4bits@data,w
  3503  050D  00F4               	movwf	??_lcd_byte_4bits
  3504  050E  3004               	movlw	4
  3505  050F                     u1295:
  3506  050F  1003               	clrc
  3507  0510  0CF4               	rrf	??_lcd_byte_4bits,f
  3508  0511  3EFF               	addlw	-1
  3509  0512  1D03               	skipz
  3510  0513  2D0F               	goto	u1295
  3511  0514  0874               	movf	??_lcd_byte_4bits,w
  3512  0515  00F5               	movwf	??_lcd_byte_4bits+1
  3513  0516  0875               	movf	??_lcd_byte_4bits+1,w
  3514  0517  00F7               	movwf	lcd_byte_4bits@nibble
  3515  0518                     l1761:
  3516                           
  3517                           ;lcd.c: 91:     lcd_send_nibble(nibble);
  3518  0518  0877               	movf	lcd_byte_4bits@nibble,w
  3519  0519  120A  118A  24BE  120A  118A  	fcall	_lcd_send_nibble
  3520  051E                     l1763:
  3521                           
  3522                           ;lcd.c: 94:     nibble = (data & 0x0F);
  3523  051E  0876               	movf	lcd_byte_4bits@data,w
  3524  051F  390F               	andlw	15
  3525  0520  00F4               	movwf	??_lcd_byte_4bits
  3526  0521  0874               	movf	??_lcd_byte_4bits,w
  3527  0522  00F7               	movwf	lcd_byte_4bits@nibble
  3528  0523                     l1765:
  3529                           
  3530                           ;lcd.c: 95:     lcd_send_nibble(nibble);
  3531  0523  0877               	movf	lcd_byte_4bits@nibble,w
  3532  0524  120A  118A  24BE  120A  118A  	fcall	_lcd_send_nibble
  3533  0529                     l190:
  3534  0529  0008               	return
  3535  052A                     __end_of_lcd_byte_4bits:
  3536                           
  3537                           	psect	text30
  3538  04BE                     __ptext30:	
  3539 ;; *************** function _lcd_send_nibble *****************
  3540 ;; Defined at:
  3541 ;;		line 69 in file "lcd.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;  data            1    wreg     unsigned char 
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;  data            1    3[COMMON] unsigned char 
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  1    wreg      void 
  3548 ;; Registers used:
  3549 ;;		wreg, status,2, status,0, pclath, cstack
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3555 ;;      Params:         0       0       0       0       0
  3556 ;;      Locals:         1       0       0       0       0
  3557 ;;      Temps:          0       0       0       0       0
  3558 ;;      Totals:         1       0       0       0       0
  3559 ;;Total ram usage:        1 bytes
  3560 ;; Hardware stack levels used: 1
  3561 ;; Hardware stack levels required when called: 3
  3562 ;; This function calls:
  3563 ;;		_lcd_en_pulse
  3564 ;; This function is called by:
  3565 ;;		_lcd_byte_4bits
  3566 ;;		_lcd_init_4bits
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           
  3571                           ;psect for function _lcd_send_nibble
  3572  04BE                     _lcd_send_nibble:
  3573                           
  3574                           ;incstack = 0
  3575                           ; Regs used in _lcd_send_nibble: [wreg+status,2+status,0+pclath+cstack]
  3576                           ;lcd_send_nibble@data stored from wreg
  3577  04BE  00F3               	movwf	lcd_send_nibble@data
  3578  04BF                     l1745:
  3579                           
  3580                           ;lcd.c: 69: void lcd_send_nibble(unsigned char data);lcd.c: 70: {;lcd.c: 73:     if (dat
      +                          a&0x01) PORTDbits.RD4 = 1;
  3581  04BF  1C73               	btfss	lcd_send_nibble@data,0
  3582  04C0  2CC2               	goto	u1251
  3583  04C1  2CC3               	goto	u1250
  3584  04C2                     u1251:
  3585  04C2  2CC7               	goto	l179
  3586  04C3                     u1250:
  3587  04C3                     l1747:
  3588  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  3589  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  3590  04C5  1608               	bsf	8,4	;volatile
  3591  04C6  2CCA               	goto	l180
  3592  04C7                     l179:	
  3593                           ;lcd.c: 74:  else PORTDbits.RD4 = 0;
  3594                           
  3595  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  3596  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  3597  04C9  1208               	bcf	8,4	;volatile
  3598  04CA                     l180:
  3599                           
  3600                           ;lcd.c: 75:  if (data&0x02) PORTDbits.RD5 = 1;
  3601  04CA  1CF3               	btfss	lcd_send_nibble@data,1
  3602  04CB  2CCD               	goto	u1261
  3603  04CC  2CCE               	goto	u1260
  3604  04CD                     u1261:
  3605  04CD  2CD0               	goto	l181
  3606  04CE                     u1260:
  3607  04CE                     l1749:
  3608  04CE  1688               	bsf	8,5	;volatile
  3609  04CF  2CD1               	goto	l182
  3610  04D0                     l181:	
  3611                           ;lcd.c: 76:  else PORTDbits.RD5 = 0;
  3612                           
  3613  04D0  1288               	bcf	8,5	;volatile
  3614  04D1                     l182:
  3615                           
  3616                           ;lcd.c: 77:  if (data&0x04) PORTDbits.RD6 = 1;
  3617  04D1  1D73               	btfss	lcd_send_nibble@data,2
  3618  04D2  2CD4               	goto	u1271
  3619  04D3  2CD5               	goto	u1270
  3620  04D4                     u1271:
  3621  04D4  2CD7               	goto	l183
  3622  04D5                     u1270:
  3623  04D5                     l1751:
  3624  04D5  1708               	bsf	8,6	;volatile
  3625  04D6  2CD8               	goto	l184
  3626  04D7                     l183:	
  3627                           ;lcd.c: 78:  else PORTDbits.RD6 = 0;
  3628                           
  3629  04D7  1308               	bcf	8,6	;volatile
  3630  04D8                     l184:
  3631                           
  3632                           ;lcd.c: 79:  if (data&0x08) PORTDbits.RD7 = 1;
  3633  04D8  1DF3               	btfss	lcd_send_nibble@data,3
  3634  04D9  2CDB               	goto	u1281
  3635  04DA  2CDC               	goto	u1280
  3636  04DB                     u1281:
  3637  04DB  2CDE               	goto	l185
  3638  04DC                     u1280:
  3639  04DC                     l1753:
  3640  04DC  1788               	bsf	8,7	;volatile
  3641  04DD  2CDF               	goto	l1755
  3642  04DE                     l185:	
  3643                           ;lcd.c: 80:  else PORTDbits.RD7 = 0;
  3644                           
  3645  04DE  1388               	bcf	8,7	;volatile
  3646  04DF                     l1755:
  3647                           
  3648                           ;lcd.c: 82:     lcd_en_pulse();
  3649  04DF  120A  118A  266B  120A  118A  	fcall	_lcd_en_pulse
  3650  04E4                     l187:
  3651  04E4  0008               	return
  3652  04E5                     __end_of_lcd_send_nibble:
  3653                           
  3654                           	psect	text31
  3655  066B                     __ptext31:	
  3656 ;; *************** function _lcd_en_pulse *****************
  3657 ;; Defined at:
  3658 ;;		line 61 in file "lcd.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;		None
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;		None
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  1    wreg      void 
  3665 ;; Registers used:
  3666 ;;		status,2, status,0, pclath, cstack
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3672 ;;      Params:         0       0       0       0       0
  3673 ;;      Locals:         0       0       0       0       0
  3674 ;;      Temps:          0       0       0       0       0
  3675 ;;      Totals:         0       0       0       0       0
  3676 ;;Total ram usage:        0 bytes
  3677 ;; Hardware stack levels used: 1
  3678 ;; Hardware stack levels required when called: 2
  3679 ;; This function calls:
  3680 ;;		_lcd_delay_1us
  3681 ;; This function is called by:
  3682 ;;		_lcd_send_nibble
  3683 ;;		_lcd_byte_8bits
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687                           
  3688                           ;psect for function _lcd_en_pulse
  3689  066B                     _lcd_en_pulse:
  3690  066B                     l1739:	
  3691                           ;incstack = 0
  3692                           ; Regs used in _lcd_en_pulse: [status,2+status,0+pclath+cstack]
  3693                           
  3694                           
  3695                           ;lcd.c: 63:     PORTDbits.RD1 = 1;
  3696  066B  1283               	bcf	3,5	;RP0=0, select bank0
  3697  066C  1303               	bcf	3,6	;RP1=0, select bank0
  3698  066D  1488               	bsf	8,1	;volatile
  3699  066E                     l1741:
  3700                           
  3701                           ;lcd.c: 64:     lcd_delay_1us();
  3702  066E  120A  118A  26D2  120A  118A  	fcall	_lcd_delay_1us
  3703  0673                     l1743:
  3704                           
  3705                           ;lcd.c: 65:     PORTDbits.RD1 = 0;
  3706  0673  1283               	bcf	3,5	;RP0=0, select bank0
  3707  0674  1303               	bcf	3,6	;RP1=0, select bank0
  3708  0675  1088               	bcf	8,1	;volatile
  3709                           
  3710                           ;lcd.c: 66:     lcd_delay_1us();
  3711  0676  120A  118A  26D2  120A  118A  	fcall	_lcd_delay_1us
  3712  067B                     l176:
  3713  067B  0008               	return
  3714  067C                     __end_of_lcd_en_pulse:
  3715                           
  3716                           	psect	text32
  3717  06D2                     __ptext32:	
  3718 ;; *************** function _lcd_delay_1us *****************
  3719 ;; Defined at:
  3720 ;;		line 56 in file "lcd.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;		None
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;		None
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  1    wreg      void 
  3727 ;; Registers used:
  3728 ;;		None
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3734 ;;      Params:         0       0       0       0       0
  3735 ;;      Locals:         0       0       0       0       0
  3736 ;;      Temps:          0       0       0       0       0
  3737 ;;      Totals:         0       0       0       0       0
  3738 ;;Total ram usage:        0 bytes
  3739 ;; Hardware stack levels used: 1
  3740 ;; Hardware stack levels required when called: 1
  3741 ;; This function calls:
  3742 ;;		Nothing
  3743 ;; This function is called by:
  3744 ;;		_lcd_en_pulse
  3745 ;; This function uses a non-reentrant model
  3746 ;;
  3747                           
  3748                           
  3749                           ;psect for function _lcd_delay_1us
  3750  06D2                     _lcd_delay_1us:
  3751  06D2                     l1737:	
  3752                           ;incstack = 0
  3753                           ; Regs used in _lcd_delay_1us: []
  3754                           
  3755  06D2  2ED3               	nop2	;2 cycle nop
  3756  06D3  2ED4               	nop2	;2 cycle nop
  3757  06D4  0000               	nop
  3758  06D5                     l164:
  3759  06D5  0008               	return
  3760  06D6                     __end_of_lcd_delay_1us:
  3761                           
  3762                           	psect	text33
  3763  0024                     __ptext33:	
  3764 ;; *************** function _myIsr *****************
  3765 ;; Defined at:
  3766 ;;		line 121 in file "main.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;		None
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;		None
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  1    wreg      void 
  3773 ;; Registers used:
  3774 ;;		wreg, status,2, status,0
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3780 ;;      Params:         0       0       0       0       0
  3781 ;;      Locals:         0       0       0       0       0
  3782 ;;      Temps:          3       0       0       0       0
  3783 ;;      Totals:         3       0       0       0       0
  3784 ;;Total ram usage:        3 bytes
  3785 ;; Hardware stack levels used: 1
  3786 ;; This function calls:
  3787 ;;		Nothing
  3788 ;; This function is called by:
  3789 ;;		Interrupt level 1
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           
  3794                           ;psect for function _myIsr
  3795  0024                     _myIsr:
  3796  0024                     i1l1545:
  3797                           
  3798                           ;main.c: 124:     if (INTCONbits.RBIE && INTCONbits.RBIF) {
  3799  0024  1D8B               	btfss	11,3	;volatile
  3800  0025  2827               	goto	u87_21
  3801  0026  2828               	goto	u87_20
  3802  0027                     u87_21:
  3803  0027  28DA               	goto	i1l95
  3804  0028                     u87_20:
  3805  0028                     i1l1547:
  3806  0028  1C0B               	btfss	11,0	;volatile
  3807  0029  282B               	goto	u88_21
  3808  002A  282C               	goto	u88_20
  3809  002B                     u88_21:
  3810  002B  28DA               	goto	i1l95
  3811  002C                     u88_20:
  3812  002C                     i1l1549:
  3813                           
  3814                           ;main.c: 125:         INTCONbits.RBIF = 0;
  3815  002C  100B               	bcf	11,0	;volatile
  3816                           
  3817                           ;main.c: 128:         if (PORTBbits.RB4 == 1 && PORTBbits.RB5 == 1) {
  3818  002D  1283               	bcf	3,5	;RP0=0, select bank0
  3819  002E  1303               	bcf	3,6	;RP1=0, select bank0
  3820  002F  1E06               	btfss	6,4	;volatile
  3821  0030  2832               	goto	u89_21
  3822  0031  2833               	goto	u89_20
  3823  0032                     u89_21:
  3824  0032  283C               	goto	i1l96
  3825  0033                     u89_20:
  3826  0033                     i1l1551:
  3827  0033  1E86               	btfss	6,5	;volatile
  3828  0034  2836               	goto	u90_21
  3829  0035  2837               	goto	u90_20
  3830  0036                     u90_21:
  3831  0036  283C               	goto	i1l96
  3832  0037                     u90_20:
  3833  0037                     i1l1553:
  3834                           
  3835                           ;main.c: 129:             option = 'E';
  3836  0037  3045               	movlw	69
  3837  0038  00F0               	movwf	??_myIsr
  3838  0039  0870               	movf	??_myIsr,w
  3839  003A  00BD               	movwf	_option
  3840                           
  3841                           ;main.c: 132:         } else if (PORTBbits.RB4 == 1 || PORTBbits.RB5 == 1) {
  3842  003B  28D3               	goto	i1l1617
  3843  003C                     i1l96:
  3844  003C  1A06               	btfsc	6,4	;volatile
  3845  003D  283F               	goto	u91_21
  3846  003E  2840               	goto	u91_20
  3847  003F                     u91_21:
  3848  003F  2844               	goto	i1l100
  3849  0040                     u91_20:
  3850  0040                     i1l1555:
  3851  0040  1E86               	btfss	6,5	;volatile
  3852  0041  2843               	goto	u92_21
  3853  0042  2844               	goto	u92_20
  3854  0043                     u92_21:
  3855  0043  28A7               	goto	i1l98
  3856  0044                     u92_20:
  3857  0044                     i1l100:
  3858                           
  3859                           ;main.c: 135:             if (PORTBbits.RB4 == 1 && rm_pacote == 0) {
  3860  0044  1E06               	btfss	6,4	;volatile
  3861  0045  2847               	goto	u93_21
  3862  0046  2848               	goto	u93_20
  3863  0047                     u93_21:
  3864  0047  2860               	goto	i1l101
  3865  0048                     u93_20:
  3866  0048                     i1l1557:
  3867  0048  0878               	movf	_rm_pacote,w
  3868  0049  0479               	iorwf	_rm_pacote+1,w
  3869  004A  1D03               	btfss	3,2
  3870  004B  284D               	goto	u94_21
  3871  004C  284E               	goto	u94_20
  3872  004D                     u94_21:
  3873  004D  2860               	goto	i1l101
  3874  004E                     u94_20:
  3875  004E                     i1l1559:
  3876                           
  3877                           ;main.c: 136:                 option = 'A';
  3878  004E  3041               	movlw	65
  3879  004F  00F0               	movwf	??_myIsr
  3880  0050  0870               	movf	??_myIsr,w
  3881  0051  00BD               	movwf	_option
  3882  0052                     i1l1561:
  3883                           
  3884                           ;main.c: 139:                 if (PORTBbits.RB6 == 1 && PORTBbits.RB5 == 0 && PORTCbits.
      +                          RC1 == 0) {
  3885  0052  1F06               	btfss	6,6	;volatile
  3886  0053  2855               	goto	u95_21
  3887  0054  2856               	goto	u95_20
  3888  0055                     u95_21:
  3889  0055  2872               	goto	i1l1575
  3890  0056                     u95_20:
  3891  0056                     i1l1563:
  3892  0056  1A86               	btfsc	6,5	;volatile
  3893  0057  2859               	goto	u96_21
  3894  0058  285A               	goto	u96_20
  3895  0059                     u96_21:
  3896  0059  2872               	goto	i1l1575
  3897  005A                     u96_20:
  3898  005A                     i1l1565:
  3899  005A  1887               	btfsc	7,1	;volatile
  3900  005B  285D               	goto	u97_21
  3901  005C  285E               	goto	u97_20
  3902  005D                     u97_21:
  3903  005D  2872               	goto	i1l1575
  3904  005E                     u97_20:
  3905  005E                     i1l1567:
  3906                           
  3907                           ;main.c: 140:                     PORTCbits.RC2 = 1;
  3908  005E  1507               	bsf	7,2	;volatile
  3909  005F  2872               	goto	i1l1575
  3910  0060                     i1l101:
  3911  0060  1D07               	btfss	7,2	;volatile
  3912  0061  2863               	goto	u98_21
  3913  0062  2864               	goto	u98_20
  3914  0063                     u98_21:
  3915  0063  2872               	goto	i1l1575
  3916  0064                     u98_20:
  3917  0064                     i1l1569:
  3918  0064  1E86               	btfss	6,5	;volatile
  3919  0065  2867               	goto	u99_21
  3920  0066  2868               	goto	u99_20
  3921  0067                     u99_21:
  3922  0067  2872               	goto	i1l1575
  3923  0068                     u99_20:
  3924  0068                     i1l1571:
  3925                           
  3926                           ;main.c: 145:                 PORTCbits.RC0 = 1;
  3927  0068  1407               	bsf	7,0	;volatile
  3928                           
  3929                           ;main.c: 146:                 PORTCbits.RC2 = 0;
  3930  0069  1107               	bcf	7,2	;volatile
  3931  006A                     i1l1573:
  3932                           
  3933                           ;main.c: 147:                 rm_pacote = 1;
  3934  006A  3001               	movlw	1
  3935  006B  00F8               	movwf	_rm_pacote
  3936  006C  3000               	movlw	0
  3937  006D  00F9               	movwf	_rm_pacote+1
  3938                           
  3939                           ;main.c: 148:                 option = 'R';
  3940  006E  3052               	movlw	82
  3941  006F  00F0               	movwf	??_myIsr
  3942  0070  0870               	movf	??_myIsr,w
  3943  0071  00BD               	movwf	_option
  3944  0072                     i1l1575:
  3945                           
  3946                           ;main.c: 153:             if (PORTBbits.RB5 == 1 && rm_pacote == 0) {
  3947  0072  1E86               	btfss	6,5	;volatile
  3948  0073  2875               	goto	u100_21
  3949  0074  2876               	goto	u100_20
  3950  0075                     u100_21:
  3951  0075  288E               	goto	i1l105
  3952  0076                     u100_20:
  3953  0076                     i1l1577:
  3954  0076  0878               	movf	_rm_pacote,w
  3955  0077  0479               	iorwf	_rm_pacote+1,w
  3956  0078  1D03               	btfss	3,2
  3957  0079  287B               	goto	u101_21
  3958  007A  287C               	goto	u101_20
  3959  007B                     u101_21:
  3960  007B  288E               	goto	i1l105
  3961  007C                     u101_20:
  3962  007C                     i1l1579:
  3963                           
  3964                           ;main.c: 154:                 option = 'B';
  3965  007C  3042               	movlw	66
  3966  007D  00F0               	movwf	??_myIsr
  3967  007E  0870               	movf	??_myIsr,w
  3968  007F  00BD               	movwf	_option
  3969  0080                     i1l1581:
  3970                           
  3971                           ;main.c: 157:                 if (PORTBbits.RB6 == 1 && PORTBbits.RB4 == 0 && PORTCbits.
      +                          RC2 == 0) {
  3972  0080  1F06               	btfss	6,6	;volatile
  3973  0081  2883               	goto	u102_21
  3974  0082  2884               	goto	u102_20
  3975  0083                     u102_21:
  3976  0083  28D3               	goto	i1l109
  3977  0084                     u102_20:
  3978  0084                     i1l1583:
  3979  0084  1A06               	btfsc	6,4	;volatile
  3980  0085  2887               	goto	u103_21
  3981  0086  2888               	goto	u103_20
  3982  0087                     u103_21:
  3983  0087  28D3               	goto	i1l109
  3984  0088                     u103_20:
  3985  0088                     i1l1585:
  3986  0088  1907               	btfsc	7,2	;volatile
  3987  0089  288B               	goto	u104_21
  3988  008A  288C               	goto	u104_20
  3989  008B                     u104_21:
  3990  008B  28D3               	goto	i1l109
  3991  008C                     u104_20:
  3992  008C                     i1l1587:
  3993                           
  3994                           ;main.c: 158:                     PORTCbits.RC1 = 1;
  3995  008C  1487               	bsf	7,1	;volatile
  3996  008D  28D3               	goto	i1l1617
  3997  008E                     i1l105:
  3998  008E  1C87               	btfss	7,1	;volatile
  3999  008F  2891               	goto	u105_21
  4000  0090  2892               	goto	u105_20
  4001  0091                     u105_21:
  4002  0091  28D3               	goto	i1l109
  4003  0092                     u105_20:
  4004  0092                     i1l1589:
  4005  0092  1E06               	btfss	6,4	;volatile
  4006  0093  2895               	goto	u106_21
  4007  0094  2896               	goto	u106_20
  4008  0095                     u106_21:
  4009  0095  28D3               	goto	i1l109
  4010  0096                     u106_20:
  4011  0096                     i1l1591:
  4012  0096  0878               	movf	_rm_pacote,w
  4013  0097  0479               	iorwf	_rm_pacote+1,w
  4014  0098  1D03               	btfss	3,2
  4015  0099  289B               	goto	u107_21
  4016  009A  289C               	goto	u107_20
  4017  009B                     u107_21:
  4018  009B  28D3               	goto	i1l109
  4019  009C                     u107_20:
  4020  009C                     i1l1593:
  4021                           
  4022                           ;main.c: 163:                 PORTCbits.RC0 = 1;
  4023  009C  1407               	bsf	7,0	;volatile
  4024                           
  4025                           ;main.c: 164:                 PORTCbits.RC1 = 0;
  4026  009D  1087               	bcf	7,1	;volatile
  4027  009E                     i1l1595:
  4028                           
  4029                           ;main.c: 165:                 rm_pacote = 1;
  4030  009E  3001               	movlw	1
  4031  009F  00F8               	movwf	_rm_pacote
  4032  00A0  3000               	movlw	0
  4033  00A1  00F9               	movwf	_rm_pacote+1
  4034                           
  4035                           ;main.c: 166:                 option = 'R';
  4036  00A2  3052               	movlw	82
  4037  00A3  00F0               	movwf	??_myIsr
  4038  00A4  0870               	movf	??_myIsr,w
  4039  00A5  00BD               	movwf	_option
  4040  00A6  28D3               	goto	i1l1617
  4041  00A7                     i1l98:
  4042  00A7  1A06               	btfsc	6,4	;volatile
  4043  00A8  28AA               	goto	u108_21
  4044  00A9  28AB               	goto	u108_20
  4045  00AA                     u108_21:
  4046  00AA  28BB               	goto	i1l110
  4047  00AB                     u108_20:
  4048  00AB                     i1l1597:
  4049  00AB  1A86               	btfsc	6,5	;volatile
  4050  00AC  28AE               	goto	u109_21
  4051  00AD  28AF               	goto	u109_20
  4052  00AE                     u109_21:
  4053  00AE  28BB               	goto	i1l110
  4054  00AF                     u109_20:
  4055  00AF                     i1l1599:
  4056  00AF  1B06               	btfsc	6,6	;volatile
  4057  00B0  28B2               	goto	u110_21
  4058  00B1  28B3               	goto	u110_20
  4059  00B2                     u110_21:
  4060  00B2  28BB               	goto	i1l110
  4061  00B3                     u110_20:
  4062  00B3                     i1l1601:
  4063                           
  4064                           ;main.c: 171:             PORTCbits.RC2 = 0;
  4065  00B3  1107               	bcf	7,2	;volatile
  4066                           
  4067                           ;main.c: 172:             PORTCbits.RC1 = 0;
  4068  00B4  1087               	bcf	7,1	;volatile
  4069                           
  4070                           ;main.c: 173:             PORTCbits.RC0 = 0;
  4071  00B5  1007               	bcf	7,0	;volatile
  4072  00B6                     i1l1603:
  4073                           
  4074                           ;main.c: 174:             option = 'P';
  4075  00B6  3050               	movlw	80
  4076  00B7  00F0               	movwf	??_myIsr
  4077  00B8  0870               	movf	??_myIsr,w
  4078  00B9  00BD               	movwf	_option
  4079                           
  4080                           ;main.c: 177:         } else if (PORTBbits.RB4 == 0 && PORTBbits.RB5 == 0 && PORTBbits.R
      +                          B6 == 1 && rm_pacote == 1) {
  4081  00BA  28D3               	goto	i1l1617
  4082  00BB                     i1l110:
  4083  00BB  1A06               	btfsc	6,4	;volatile
  4084  00BC  28BE               	goto	u111_21
  4085  00BD  28BF               	goto	u111_20
  4086  00BE                     u111_21:
  4087  00BE  28D3               	goto	i1l109
  4088  00BF                     u111_20:
  4089  00BF                     i1l1605:
  4090  00BF  1A86               	btfsc	6,5	;volatile
  4091  00C0  28C2               	goto	u112_21
  4092  00C1  28C3               	goto	u112_20
  4093  00C2                     u112_21:
  4094  00C2  28D3               	goto	i1l109
  4095  00C3                     u112_20:
  4096  00C3                     i1l1607:
  4097  00C3  1F06               	btfss	6,6	;volatile
  4098  00C4  28C6               	goto	u113_21
  4099  00C5  28C7               	goto	u113_20
  4100  00C6                     u113_21:
  4101  00C6  28D3               	goto	i1l109
  4102  00C7                     u113_20:
  4103  00C7                     i1l1609:
  4104  00C7  0378               	decf	_rm_pacote,w
  4105  00C8  0479               	iorwf	_rm_pacote+1,w
  4106  00C9  1D03               	btfss	3,2
  4107  00CA  28CC               	goto	u114_21
  4108  00CB  28CD               	goto	u114_20
  4109  00CC                     u114_21:
  4110  00CC  28D3               	goto	i1l109
  4111  00CD                     u114_20:
  4112  00CD                     i1l1611:
  4113                           
  4114                           ;main.c: 178:             PORTCbits.RC0 = 0;
  4115  00CD  1007               	bcf	7,0	;volatile
  4116  00CE                     i1l1613:
  4117                           
  4118                           ;main.c: 179:             rm_pacote = 0;
  4119  00CE  01F8               	clrf	_rm_pacote
  4120  00CF  01F9               	clrf	_rm_pacote+1
  4121                           
  4122                           ;main.c: 180:             ps_c = 0;
  4123  00D0  01B7               	clrf	_ps_c
  4124  00D1  01B8               	clrf	_ps_c+1
  4125  00D2  28B6               	goto	i1l1603
  4126  00D3                     i1l109:
  4127  00D3                     i1l1617:
  4128                           
  4129                           ;main.c: 185:         if (PORTBbits.RB6 == 0) {
  4130  00D3  1B06               	btfsc	6,6	;volatile
  4131  00D4  28D6               	goto	u115_21
  4132  00D5  28D7               	goto	u115_20
  4133  00D6                     u115_21:
  4134  00D6  28DA               	goto	i1l95
  4135  00D7                     u115_20:
  4136  00D7                     i1l1619:
  4137                           
  4138                           ;main.c: 186:             PORTCbits.RC2 = 0;
  4139  00D7  1107               	bcf	7,2	;volatile
  4140                           
  4141                           ;main.c: 187:             PORTCbits.RC1 = 0;
  4142  00D8  1087               	bcf	7,1	;volatile
  4143                           
  4144                           ;main.c: 188:             PORTCbits.RC0 = 0;
  4145  00D9  1007               	bcf	7,0	;volatile
  4146  00DA                     i1l95:	
  4147                           ;main.c: 190:     }
  4148                           
  4149                           
  4150                           ;main.c: 193:     if (INTCONbits.TMR0IE && INTCONbits.TMR0IF) {
  4151  00DA  1E8B               	btfss	11,5	;volatile
  4152  00DB  28DD               	goto	u116_21
  4153  00DC  28DE               	goto	u116_20
  4154  00DD                     u116_21:
  4155  00DD  28EE               	goto	i1l115
  4156  00DE                     u116_20:
  4157  00DE                     i1l1621:
  4158  00DE  1D0B               	btfss	11,2	;volatile
  4159  00DF  28E1               	goto	u117_21
  4160  00E0  28E2               	goto	u117_20
  4161  00E1                     u117_21:
  4162  00E1  28EE               	goto	i1l115
  4163  00E2                     u117_20:
  4164  00E2                     i1l1623:
  4165                           
  4166                           ;main.c: 195:         TMR0 = (256 - 1) + TMR0;
  4167  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  4168  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  4169  00E4  0801               	movf	1,w	;volatile
  4170  00E5  3EFF               	addlw	255
  4171  00E6  0081               	movwf	1	;volatile
  4172  00E7                     i1l1625:
  4173                           
  4174                           ;main.c: 196:         INTCONbits.TMR0IF = 0;
  4175  00E7  110B               	bcf	11,2	;volatile
  4176  00E8                     i1l1627:
  4177                           
  4178                           ;main.c: 197:         count0++;
  4179  00E8  3001               	movlw	1
  4180  00E9  07BB               	addwf	_count0,f
  4181  00EA  1803               	skipnc
  4182  00EB  0ABC               	incf	_count0+1,f
  4183  00EC  3000               	movlw	0
  4184  00ED  07BC               	addwf	_count0+1,f
  4185  00EE                     i1l115:
  4186  00EE  0872               	movf	??_myIsr+2,w
  4187  00EF  008A               	movwf	10
  4188  00F0  0E71               	swapf	??_myIsr+1,w
  4189  00F1  0083               	movwf	3
  4190  00F2  0EFE               	swapf	btemp,f
  4191  00F3  0E7E               	swapf	btemp,w
  4192  00F4  0009               	retfie
  4193  00F5                     __end_of_myIsr:
  4194  007E                     btemp	set	126	;btemp
  4195  007E                     wtemp0	set	126
  4196                           
  4197                           	psect	intentry
  4198  0004                     __pintentry:	
  4199                           ;incstack = 0
  4200 ;; hardware stack exceeded
  4201                           ; Regs used in _myIsr: [wreg+status,2+status,0]
  4202                           
  4203  0004                     interrupt_function:
  4204  007E                     saved_w	set	btemp
  4205  0004  00FE               	movwf	btemp
  4206  0005  0E03               	swapf	3,w
  4207  0006  00F1               	movwf	??_myIsr+1
  4208  0007  080A               	movf	10,w
  4209  0008  00F2               	movwf	??_myIsr+2
  4210  0009  120A  118A  2824   	ljmp	_myIsr
  4211                           
  4212                           	psect	config
  4213                           
  4214                           ;Config register CONFIG @ 0x2007
  4215                           ;	Oscillator Selection bits
  4216                           ;	FOSC = HS, HS oscillator
  4217                           ;	Watchdog Timer Enable bit
  4218                           ;	WDTE = OFF, WDT disabled
  4219                           ;	Power-up Timer Enable bit
  4220                           ;	PWRTE = OFF, PWRT disabled
  4221                           ;	Brown-out Reset Enable bit
  4222                           ;	BOREN = ON, BOR enabled
  4223                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4224                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  4225                           ;	Data EEPROM Memory Code Protection bit
  4226                           ;	CPD = OFF, Data EEPROM code protection off
  4227                           ;	Flash Program Memory Write Enable bits
  4228                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4229                           ;	In-Circuit Debugger Mode bit
  4230                           ;	DEBUG = 0x1, unprogrammed default
  4231                           ;	Flash Program Memory Code Protection bit
  4232                           ;	CP = OFF, Code protection off
  4233  2007                     	org	8199
  4234  2007  3FFA               	dw	16378

Data Sizes:
    Strings     154
    Constant    0
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     23      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> char_value(BANK0[5]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 5
		 -> char_value(BANK0[5]), 

    itoa@buf	PTR unsigned char  size(1) Largest target is 5
		 -> char_value(BANK0[5]), 

    itoa@cp	PTR unsigned char  size(1) Largest target is 5
		 -> char_value(BANK0[5]), 

    lcd_puts@vector	PTR unsigned char  size(2) Largest target is 16
		 -> char_value(BANK0[5]), STR_10(CODE[11]), STR_9(CODE[16]), STR_8(CODE[16]), 
		 -> STR_7(CODE[16]), STR_6(CODE[15]), STR_5(CODE[16]), STR_4(CODE[16]), 
		 -> STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[16]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 5
		 -> char_value(BANK0[5]), 


Critical Paths under _main in COMMON

    _main->___lwmod
    _utoa->___lwdiv
    _utoa->___lwmod
    _lcd_char->_lcd_byte_4bits
    _lcd_cmd->_lcd_byte_4bits
    _lcd_byte_4bits->_lcd_send_nibble

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_set_valor
    _set_valor->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _qnt->_lcd_puts
    _pac_null->_lcd_puts
    _pac_dual->_lcd_puts
    _pac_Remova->_lcd_puts
    _pac_Erro->_lcd_puts
    _pac_C->_lcd_puts
    _pac_B->_lcd_puts
    _pac_A->_lcd_puts
    _ligar_motor->_lcd_puts
    _lcd_init_8bits->_lcd_cmd
    _lcd_init_4bits->_lcd_cmd
    _lcd_clear->_lcd_cmd
    _esperando->_lcd_puts
    _lcd_puts->_lcd_char
    _lcd_goto->_lcd_cmd

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   47530
                                             21 BANK0      2     2      0
                            ___lwmod
                          _esperando
                               _init
                           _lcd_init
                        _ligar_motor
                              _pac_A
                              _pac_B
                              _pac_C
                           _pac_Erro
                         _pac_Remova
                           _pac_dual
                           _pac_null
                                _qnt
                          _set_valor
 ---------------------------------------------------------------------------------
 (1) _set_valor                                            3     1      2    6340
                                             18 BANK0      3     1      2
                               _itoa
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 7     3      4    2298
                                             12 BANK0      6     2      4
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    1849
                                              3 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     592
                                              3 COMMON     5     1      4
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     601
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _qnt                                                  1     1      0    3921
                                             10 BANK0      1     1      0
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _pac_null                                             1     1      0    3921
                                             10 BANK0      1     1      0
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _pac_dual                                             1     1      0    3921
                                             10 BANK0      1     1      0
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _pac_Remova                                           1     1      0    3921
                                             10 BANK0      1     1      0
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _pac_Erro                                             1     1      0    3921
                                             10 BANK0      1     1      0
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _pac_C                                                1     1      0    3921
                                             10 BANK0      1     1      0
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _pac_B                                                1     1      0    3921
                                             10 BANK0      1     1      0
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _pac_A                                                1     1      0    3921
                                             10 BANK0      1     1      0
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _ligar_motor                                          1     1      0    3921
                                             10 BANK0      1     1      0
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0    1388
                     _lcd_init_4bits
                     _lcd_init_8bits
 ---------------------------------------------------------------------------------
 (2) _lcd_init_8bits                                       0     0      0     632
                          _lcd_clear
                            _lcd_cmd
                      _lcd_delay_2ms
                     _lcd_delay_40ms
 ---------------------------------------------------------------------------------
 (2) _lcd_init_4bits                                       0     0      0     756
                          _lcd_clear
                            _lcd_cmd
                      _lcd_delay_2ms
                     _lcd_delay_40ms
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_delay_40ms                                       3     3      0       0
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _lcd_clear                                            0     0      0     316
                            _lcd_cmd
                      _lcd_delay_2ms
 ---------------------------------------------------------------------------------
 (3) _lcd_delay_2ms                                        2     2      0       0
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _esperando                                            1     1      0    3921
                                             10 BANK0      1     1      0
                           _lcd_goto
                           _lcd_puts
 ---------------------------------------------------------------------------------
 (2) _lcd_puts                                             9     6      3    2460
                                              1 BANK0      9     6      3
                           _lcd_char
 ---------------------------------------------------------------------------------
 (3) _lcd_char                                             1     1      0     316
                                              0 BANK0      1     1      0
                     _lcd_byte_4bits
                     _lcd_byte_8bits
                     _lcd_delay_40us
 ---------------------------------------------------------------------------------
 (2) _lcd_goto                                             4     3      1    1461
                                              1 BANK0      4     3      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              1     1      0     316
                                              0 BANK0      1     1      0
                     _lcd_byte_4bits
                     _lcd_byte_8bits
                     _lcd_delay_40us
 ---------------------------------------------------------------------------------
 (4) _lcd_delay_40us                                       1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _lcd_byte_8bits                                       1     1      0       0
                       _lcd_en_pulse
 ---------------------------------------------------------------------------------
 (4) _lcd_byte_4bits                                       4     4      0     254
                                              4 COMMON     4     4      0
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (5) _lcd_send_nibble                                      1     1      0     124
                                              3 COMMON     1     1      0
                       _lcd_en_pulse
 ---------------------------------------------------------------------------------
 (5) _lcd_en_pulse                                         0     0      0       0
                      _lcd_delay_1us
 ---------------------------------------------------------------------------------
 (6) _lcd_delay_1us                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _myIsr                                                3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwmod
   _esperando
     _lcd_goto
       _lcd_cmd
         _lcd_byte_4bits
           _lcd_send_nibble
             _lcd_en_pulse
               _lcd_delay_1us
         _lcd_byte_8bits
           _lcd_en_pulse
         _lcd_delay_40us
     _lcd_puts
       _lcd_char
         _lcd_byte_4bits
         _lcd_byte_8bits
         _lcd_delay_40us
   _init
   _lcd_init
     _lcd_init_4bits
       _lcd_clear
         _lcd_cmd
         _lcd_delay_2ms
       _lcd_cmd
       _lcd_delay_2ms
       _lcd_delay_40ms
       _lcd_send_nibble
     _lcd_init_8bits
       _lcd_clear
       _lcd_cmd
       _lcd_delay_2ms
       _lcd_delay_40ms
   _ligar_motor
     _lcd_goto
     _lcd_puts
   _pac_A
     _lcd_goto
     _lcd_puts
   _pac_B
     _lcd_goto
     _lcd_puts
   _pac_C
     _lcd_goto
     _lcd_puts
   _pac_Erro
     _lcd_goto
     _lcd_puts
   _pac_Remova
     _lcd_goto
     _lcd_puts
   _pac_dual
     _lcd_goto
     _lcd_puts
   _pac_null
     _lcd_goto
     _lcd_puts
   _qnt
     _lcd_goto
     _lcd_puts
   _set_valor
     _itoa
       _utoa
         ___lwdiv
         ___lwmod
     _lcd_goto
     _lcd_puts

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      23       5       43.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2E      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Nov 29 19:36:17 2021

             lcd_cmd@data 0020              lcd_char@data 0020                         pc 0002  
                      l60 05DD                        l63 05BF                        l72 0583  
                      l57 0636                        l81 0547                        l66 066A  
                      l90 04BD                        l75 0619                        l84 0565  
                      l69 05A1                        l78 05FB                        l87 0650  
                      fsr 0004                       l202 0686                       l130 0157  
                     l203 068B                       l212 03E8                       l220 06C5  
                     l223 06B5                       l215 0364                       l209 0491  
                     l170 06BF                       l138 01A9                       l235 045F  
                     l164 06D5                       l180 04CA                       l181 04D0  
                     l173 06A9                       l182 04D1                       l190 0529  
                     l183 04D7                       l167 06CB                       l176 067B  
                     l184 04D8                       l185 04DE                       l193 06D1  
                     l187 04E4                       l179 04C7                       l603 0424  
                     l197 0696                       l198 069B                       l593 03AA  
                     l781 0304                       l783 031B                       l775 050A  
                     _qnt 0637                       fsr0 0004                       indf 0000  
             lcd_goto@col 0021               lcd_goto@lin 0024                      l2001 0145  
                    l2011 0165                      l2003 014D                      l2013 0171  
                    l2021 019D                      l2005 0151                      l2015 0176  
                    l2023 01A3                      l2007 015B                      l1321 06B6  
                    l2017 018B                      l2009 015F                      l2025 01A9  
                    l2019 0193                      l1471 062A                      l2095 0134  
                    l2097 0451                      l1473 062C                      l1465 061A  
                    l1377 069C                      l1801 03E9                      l1475 062E  
                    l1467 0621                      l1811 0403                      l1803 03EF  
                    l1741 066E                      l1477 0632                      l1469 0625  
                    l1813 040D                      l1805 03F4                      l1901 04F7  
                    l1743 0673                      l1751 04D5                      l1823 067F  
                    l1911 05C0                      l1815 0413                      l1807 03FB  
                    l1831 02AD                      l1903 04FC                      l1737 06D2  
                    l1753 04DC                      l1745 04BF                      l1761 0518  
                    l1913 05C6                      l1921 05B0                      l1817 041A  
                    l1809 03FF                      l1841 02D2                      l1833 02B1  
                    l1739 066B                      l1755 04DF                      l1747 04C3  
                    l1763 051E                      l1827 0680                      l1907 03AB  
                    l1915 05CE                      l1923 0651                      l1931 0592  
                    l1819 0420                      l1851 0308                      l1843 02D4  
                    l1835 02C4                      l1749 04CE                      l1765 0523  
                    l1757 06C6                      l1773 0690                      l1861 0428  
                    l1941 0602                      l1829 06AA                      l1909 031C  
                    l1917 05A2                      l1925 065B                      l1933 0566  
                    l1781 0372                      l1853 030F                      l1845 02E7  
                    l1837 02C8                      l1759 050C                      l1767 06CC  
                    l1863 0429                      l1943 060A                      l1919 05A8  
                    l1927 0584                      l1935 056C                      l1951 052A  
                    l1791 0398                      l1783 0379                      l1775 0365  
                    l1855 0311                      l1847 02FA                      l1839 02CE  
                    l1769 068F                      l1865 0431                      l1873 0449  
                    l1881 0460                      l1945 05DE                      l1929 058A  
                    l1937 0574                      l1961 0556                      l1953 0530  
                    l1793 0399                      l1785 037D                      l1777 0369  
                    l1857 0317                      l1849 0300                      l1867 0439  
                    l1891 048B                      l1883 0463                      l1939 05FC  
                    l1971 06C0                      l1947 05E4                      l1955 0538  
                    l1963 0637                      l1795 03A0                      l1787 0381  
                    l1779 036F                      l1869 0441                      l1885 0465  
                    l1949 05EC                      l1957 0548                      l1965 0641  
                    l1789 0392                      l1797 03A6                      l1893 04E8  
                    l1981 00FB                      l1887 047F                      l1975 06C0  
                    l1959 054E                      l1895 04E8                      l1967 0492  
                    l1991 0118                      l1983 0101                      l1889 0485  
                    l1897 04EC                      l1969 04AE                      l1993 011E  
                    l1985 0106                      l1977 00F5                      l1899 04F3  
                    l1995 0124                      l1987 010C                      l1979 00F6  
                    l1989 0112                      l1999 012A                      ?_qnt 0070  
                    STR_1 0210                      STR_2 0220                      STR_3 0280  
                    STR_4 0250                      STR_5 0240                      STR_6 0290  
                    STR_7 0270                      STR_8 0230                      STR_9 0260  
                    u1300 036F                      u1301 036E                      u1320 0381  
                    u1400 040D                      u1321 0380                      u1401 040C  
                    u1250 04C3                      u1251 04C2                      u1315 0373  
                    u1260 04CE                      u1340 0392                      u1420 0420  
                    u1500 0151                      u1261 04CD                      u1341 0391  
                    u1421 041F                      u1405 0409                      u1501 0150  
                    u1270 04D5                      u1430 02CE                      u1510 015B  
                    u1271 04D4                      u1335 0382                      u1415 0414  
                    u1431 02CD                      u1511 015A                      u1280 04DC  
                    u1360 03A6                      u1440 0300                      u1520 015F  
                    u1281 04DB                      u1361 03A5                      u1345 038E  
                    u1441 02FF                      u1521 015E                      u1370 03EF  
                    u1450 0317                      u1530 0165                      u1355 039A  
                    u1371 03EE                      u1451 0316                      u1531 0164  
                    u1460 046F                      u1540 018B                      u1541 018A  
                    u1470 0491                      u1390 0403                      u1550 0193  
                    u1295 050F                      u1471 0490                      u1391 0402  
                    u1551 0192                      u1480 04EC                      u1385 03F5  
                    u1481 04EB                      u1490 014D                      u1491 014C  
                    u1567 06A2                      u1577 06BA                      u1587 06C8  
                    i1l95 00DA                      i1l96 003C                      i1l98 00A7  
                    _TMR0 0001            ??_lcd_en_pulse 0073          ?_lcd_send_nibble 0070  
                    _data 007A                      _main 00F5                      _init 061A  
                    _itoa 04E5                      _ps_c 0037                      btemp 007E  
                    _utoa 02AA               lcd_puts@cnt 0029                      start 000C  
            ?_ligar_motor 0070           ??_lcd_delay_2ms 0073           ??_lcd_delay_1us 0073  
                   ??_qnt 002A                     ?_main 0070                     ?_init 0070  
                   ?_itoa 002C                     STR_10 029F                     _CMCON 009C  
                   ?_utoa 0023           __end_of___lwdiv 03AB                     i1l100 0044  
                   i1l101 0060                     i1l110 00BB                     i1l105 008E  
                   i1l115 00EE                     i1l109 00D3           __end_of___lwmod 0425  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _PORTE 0009                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _TRISE 0089                     u90_20 0037                     u90_21 0036  
                   u91_20 0040                     u91_21 003F                     u92_20 0044  
                   u92_21 0043                     u93_20 0048                     u93_21 0047  
                   u94_20 004E                     u94_21 004D                     u95_20 0056  
                   u87_20 0028                     u95_21 0055                     u87_21 0027  
                   u96_20 005A                     u88_20 002C                     u96_21 0059  
                   u88_21 002B                     u97_20 005E                     u89_20 0033  
                   u97_21 005D                     u89_21 0032                     u98_20 0064  
                   u98_21 0063                     u99_20 0068                     u99_21 0067  
         __end_of_lcd_cmd 069C                     _pac_A 05C0                     _pac_B 05A2  
                   _pac_C 0651                     _myIsr 0024                     pclath 000A  
                   utoa@c 002A                     utoa@v 0028                     status 0003  
                   wtemp0 007E           __initialization 000F              __end_of_main 01B1  
            __end_of_init 0637              __end_of_itoa 050B              __end_of_utoa 031C  
        ??_lcd_delay_40ms 0073          ??_lcd_delay_40us 0073                    ??_main 0035  
                  ??_init 0073                    ??_itoa 0030                    ??_utoa 0027  
                  ?_pac_A 0070                    ?_pac_B 0070                    ?_pac_C 0070  
                  ?_myIsr 0070                    u100_20 0076                    u100_21 0075  
                  u101_20 007C                    u101_21 007B                    u110_20 00B3  
                  u102_20 0084                    u110_21 00B2                    u102_21 0083  
                  u111_20 00BF                    u103_20 0088                    u111_21 00BE  
                  u103_21 0087                    u112_20 00C3                    u104_20 008C  
                  u112_21 00C2                    i1l1601 00B3                    u104_21 008B  
                  i1l1611 00CD                    i1l1603 00B6                    i1l1621 00DE  
                  i1l1613 00CE                    i1l1605 00BF                    i1l1623 00E2  
                  i1l1607 00C3                    i1l1551 0033                    u113_20 00C7  
                  u105_20 0092                    i1l1625 00E7                    i1l1609 00C7  
                  u113_21 00C6                    u105_21 0091                    i1l1561 0052  
                  i1l1617 00D3                    i1l1553 0037                    i1l1545 0024  
                  i1l1627 00E8                    i1l1619 00D7                    i1l1571 0068  
                  i1l1563 0056                    i1l1555 0040                    i1l1547 0028  
                  i1l1581 0080                    i1l1573 006A                    i1l1565 005A  
                  i1l1557 0048                    i1l1549 002C                    i1l1591 0096  
                  i1l1583 0084                    i1l1567 005E                    i1l1575 0072  
                  i1l1559 004E                    u114_20 00CD                    u106_20 0096  
                  u114_21 00CC                    i1l1593 009C                    u106_21 0095  
                  i1l1585 0088                    i1l1577 0076                    i1l1569 0064  
                  i1l1595 009E                    i1l1587 008C                    i1l1579 007C  
                  i1l1597 00AB                    i1l1589 0092                    i1l1599 00AF  
                  u115_20 00D7                    u107_20 009C                    u115_21 00D6  
                  u107_21 009B                    u116_20 00DE                    u108_20 00AB  
                  u116_21 00DD                    u108_21 00AA                    u117_20 00E2  
                  u109_20 00AF                    u117_21 00E1                    u109_21 00AE  
                  _INTCON 000B          __end_of_lcd_char 068C          __end_of_lcd_init 06C6  
        __end_of_lcd_goto 0460          __end_of_pac_Erro 05A2          __end_of_lcd_puts 0492  
        __end_of_pac_dual 0566          __end_of_pac_null 0548                 ??___lwdiv 0077  
               ??___lwmod 0077                    _count0 003B          ??_lcd_byte_4bits 0074  
        ??_lcd_byte_8bits 0073      __end_of_lcd_en_pulse 067C                    _option 003D  
               ??_lcd_cmd 0078          ??_lcd_init_4bits 0078          ??_lcd_init_8bits 0078  
                  saved_w 007E   __end_of__initialization 0020            __pcstackCOMMON 0070  
           __end_of_pac_A 05DE             __end_of_pac_B 05C0             __end_of_pac_C 066B  
           __end_of_myIsr 00F5      __size_of_ligar_motor 001E        __size_of_lcd_clear 000C  
                 ??_pac_A 002A                   ??_pac_B 002A                   ??_pac_C 002A  
                 ??_myIsr 0070                __pbssBANK0 0037                _char_value 003E  
      __size_of_esperando 001E                __pmaintext 00F5                __pintentry 0004  
      __size_of_set_valor 002C                 ?_lcd_char 0070                 ?_lcd_init 0070  
               ?_lcd_goto 0021                _pac_Remova 0566                 ?_pac_Erro 0070  
               ?_lcd_puts 0021                __stringtab 0200                 ?_pac_dual 0070  
               ?_pac_null 0070         __end_of_lcd_clear 06B6  __size_of_lcd_send_nibble 0027  
   __size_of_lcd_en_pulse 0011                   ___lwdiv 0365                   ___lwmod 03E9  
          lcd_puts@LENGHT 0023     __end_of_lcd_delay_2ms 06C0     __end_of_lcd_delay_1us 06D6  
                 __ptext1 0492                   __ptext2 04E5                   __ptext3 02AA  
                 __ptext4 03E9                   __ptext5 0365                   __ptext6 0637  
                 __ptext7 052A                   __ptext8 0548                   __ptext9 0566  
                 _lcd_cmd 068C         __end_of_esperando 061A                   _pacotes 0039  
            __size_of_qnt 001A        lcd_byte_4bits@data 0076                ??_lcd_char 0078  
              ??_lcd_init 0078                ??_lcd_goto 0022                ??_pac_Erro 002A  
              ??_lcd_puts 0024      end_of_initialization 0020                ??_pac_dual 002A  
              ??_pac_null 002A            lcd_puts@vector 0021                   itoa@buf 0031  
                 itoa@val 002C              _lcd_en_pulse 066B         __end_of_set_valor 04BE  
      lcd_byte_8bits@data 0070                   utoa@buf 002B                   utoa@val 0023  
               _PORTBbits 0006                 _PORTCbits 0007                 _PORTDbits 0008  
             ?_pac_Remova 0070         ??_lcd_send_nibble 0073       start_initialization 000F  
 __size_of_lcd_delay_40ms 000E   __size_of_lcd_delay_40us 0006               __end_of_qnt 0651  
           ??_ligar_motor 002A       __size_of_pac_Remova 001E            set_valor@valor 0032  
             __pbssCOMMON 0078                 ___latbits 0002             __pcstackBANK0 0020  
 __size_of_lcd_byte_4bits 001F   __size_of_lcd_byte_8bits 0006   __size_of_lcd_init_4bits 0049  
 __size_of_lcd_init_8bits 003E         __size_of_lcd_char 0010         __size_of_lcd_init 0006  
       __size_of_lcd_goto 003B         __size_of_pac_Erro 001E         __size_of_lcd_puts 0032  
       __size_of_pac_dual 001E         __size_of_pac_null 001E          ___lwdiv@dividend 0075  
                ?___lwdiv 0073                  ?___lwmod 0073                 _lcd_clear 06AA  
               __pstrings 0200       __end_of_ligar_motor 05FC                  ?_lcd_cmd 0070  
               _esperando 05FC          ___lwdiv@quotient 0021            __size_of_pac_A 001E  
          __size_of_pac_B 001E            __size_of_pac_C 001A            __size_of_myIsr 00D1  
       interrupt_function 0004      lcd_byte_4bits@nibble 0077                 _rm_pacote 0078  
               _set_valor 0492                ?_lcd_clear 0070       lcd_send_nibble@data 0073  
             __stringbase 020F            _lcd_delay_40ms 069C            _lcd_delay_40us 06C6  
               lcd_puts@x 0028                ?_esperando 0070              ??_pac_Remova 002A  
  __size_of_lcd_delay_2ms 000A    __size_of_lcd_delay_1us 0004           _lcd_send_nibble 04BE  
              ?_set_valor 0032               _ligar_motor 05DE          __size_of___lwdiv 0046  
        __size_of___lwmod 003C        __end_of_pac_Remova 0584        __end_of__stringtab 0210  
  __end_of_lcd_delay_40ms 06AA    __end_of_lcd_delay_40us 06CC          __size_of_lcd_cmd 0010  
         ___lwdiv@divisor 0073           ___lwdiv@counter 0020                  __ptext10 0584  
                __ptext11 0651                  __ptext20 06B6                  __ptext12 05A2  
                __ptext21 061A                  __ptext13 05C0                  __ptext30 04BE  
                __ptext22 05FC                  __ptext14 05DE                  __ptext31 066B  
                __ptext23 0460                  __ptext15 06C0                  __ptext32 06D2  
                __ptext24 067C                  __ptext16 03AB                  __ptext33 0024  
                __ptext25 0425                  __ptext17 031C                  __ptext26 068C  
                __ptext18 069C                  __ptext27 06C6                  __ptext19 06AA  
                __ptext28 06CC                  __ptext29 050B            _lcd_byte_4bits 050B  
          _lcd_byte_8bits 06CC                  _lcd_char 067C                  _lcd_init 06C0  
                _lcd_goto 0425            _lcd_init_4bits 031C                  _pac_Erro 0584  
                _lcd_puts 0460            _lcd_init_8bits 03AB                  _pac_dual 0548  
                _pac_null 052A             __size_of_main 00BC             __size_of_init 001D  
           __size_of_itoa 0026             __size_of_utoa 0072               ??_lcd_clear 0078  
           _lcd_delay_2ms 06B6             _lcd_delay_1us 06D2           ?_lcd_delay_40ms 0070  
         ?_lcd_delay_40us 0070                _INTCONbits 000B    __end_of_lcd_byte_4bits 052A  
  __end_of_lcd_byte_8bits 06D2    __end_of_lcd_init_4bits 0365                  itoa@base 002E  
  __end_of_lcd_init_8bits 03E9               ??_esperando 002A                  intlevel1 0000  
 __end_of_lcd_send_nibble 04E5          ___lwmod@dividend 0075                 stringcode 020A  
             ??_set_valor 0034            ?_lcd_delay_2ms 0070            ?_lcd_delay_1us 0070  
                utoa@base 0025                _OPTION_REG 0081           ___lwmod@divisor 0073  
         ___lwmod@counter 0020           ?_lcd_byte_4bits 0070           ?_lcd_byte_8bits 0070  
                stringdir 020A                  stringtab 0200           ?_lcd_init_4bits 0070  
         ?_lcd_init_8bits 0070             ?_lcd_en_pulse 0070  
